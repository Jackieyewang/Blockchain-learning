{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * If no existing window.web3 is found, this function injects a web3 \"shim\" to\n * not break dapps that rely on window.web3.currentProvider.\n *\n * @param provider - The provider to set as window.web3.currentProvider.\n * @param log - The logging API to use.\n */\n\nfunction shimWeb3(provider, log = console) {\n  let loggedCurrentProvider = false;\n  let loggedMissingProperty = false;\n\n  if (!window.web3) {\n    const SHIM_IDENTIFIER = '__isMetaMaskShim__';\n    let web3Shim = {\n      currentProvider: provider\n    };\n    Object.defineProperty(web3Shim, SHIM_IDENTIFIER, {\n      value: true,\n      enumerable: true,\n      configurable: false,\n      writable: false\n    });\n    web3Shim = new Proxy(web3Shim, {\n      get: (target, property, ...args) => {\n        if (property === 'currentProvider' && !loggedCurrentProvider) {\n          loggedCurrentProvider = true;\n          log.warn('You are accessing the MetaMask window.web3.currentProvider shim. This property is deprecated; use window.ethereum instead. For details, see: https://docs.metamask.io/guide/provider-migration.html#replacing-window-web3');\n        } else if (property !== 'currentProvider' && property !== SHIM_IDENTIFIER && !loggedMissingProperty) {\n          loggedMissingProperty = true;\n          log.error(`MetaMask no longer injects web3. For details, see: https://docs.metamask.io/guide/provider-migration.html#replacing-window-web3`);\n          provider.request({\n            method: 'metamask_logWeb3ShimUsage'\n          }).catch(error => {\n            log.debug('MetaMask: Failed to log web3 shim usage.', error);\n          });\n        }\n\n        return Reflect.get(target, property, ...args);\n      },\n      set: (...args) => {\n        log.warn('You are accessing the MetaMask window.web3 shim. This object is deprecated; use window.ethereum instead. For details, see: https://docs.metamask.io/guide/provider-migration.html#replacing-window-web3');\n        return Reflect.set(...args);\n      }\n    });\n    Object.defineProperty(window, 'web3', {\n      value: web3Shim,\n      enumerable: false,\n      configurable: true,\n      writable: true\n    });\n  }\n}\n\nexports.default = shimWeb3;","map":{"version":3,"sources":["../src/shimWeb3.ts"],"names":[],"mappings":";;;;;AAGA;;;;;;AAMG;;AACH,SAAwB,QAAxB,CACE,QADF,EAEE,GAAA,GAAmB,OAFrB,EAE4B;AAE1B,MAAI,qBAAqB,GAAG,KAA5B;AACA,MAAI,qBAAqB,GAAG,KAA5B;;AAEA,MAAI,CAAE,MAA8B,CAAC,IAArC,EAA2C;AACzC,UAAM,eAAe,GAAG,oBAAxB;AAEA,QAAI,QAAQ,GAAG;AAAE,MAAA,eAAe,EAAE;AAAnB,KAAf;AACA,IAAA,MAAM,CAAC,cAAP,CAAsB,QAAtB,EAAgC,eAAhC,EAAiD;AAC/C,MAAA,KAAK,EAAE,IADwC;AAE/C,MAAA,UAAU,EAAE,IAFmC;AAG/C,MAAA,YAAY,EAAE,KAHiC;AAI/C,MAAA,QAAQ,EAAE;AAJqC,KAAjD;AAOA,IAAA,QAAQ,GAAG,IAAI,KAAJ,CAAU,QAAV,EAAoB;AAC7B,MAAA,GAAG,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,GAAG,IAAtB,KAA8B;AACjC,YAAI,QAAQ,KAAK,iBAAb,IAAkC,CAAC,qBAAvC,EAA8D;AAC5D,UAAA,qBAAqB,GAAG,IAAxB;AACA,UAAA,GAAG,CAAC,IAAJ,CACE,2NADF;AAGD,SALD,MAKO,IACL,QAAQ,KAAK,iBAAb,IACA,QAAQ,KAAK,eADb,IAEA,CAAC,qBAHI,EAIL;AACA,UAAA,qBAAqB,GAAG,IAAxB;AACA,UAAA,GAAG,CAAC,KAAJ,CACE,iIADF;AAGA,UAAA,QAAQ,CACL,OADH,CACW;AAAE,YAAA,MAAM,EAAE;AAAV,WADX,EAEG,KAFH,CAEU,KAAD,IAAU;AACf,YAAA,GAAG,CAAC,KAAJ,CAAU,0CAAV,EAAsD,KAAtD;AACD,WAJH;AAKD;;AACD,eAAO,OAAO,CAAC,GAAR,CAAY,MAAZ,EAAoB,QAApB,EAA8B,GAAG,IAAjC,CAAP;AACD,OAvB4B;AAwB7B,MAAA,GAAG,EAAE,CAAC,GAAG,IAAJ,KAAY;AACf,QAAA,GAAG,CAAC,IAAJ,CACE,yMADF;AAGA,eAAO,OAAO,CAAC,GAAR,CAAY,GAAG,IAAf,CAAP;AACD;AA7B4B,KAApB,CAAX;AAgCA,IAAA,MAAM,CAAC,cAAP,CAAsB,MAAtB,EAA8B,MAA9B,EAAsC;AACpC,MAAA,KAAK,EAAE,QAD6B;AAEpC,MAAA,UAAU,EAAE,KAFwB;AAGpC,MAAA,YAAY,EAAE,IAHsB;AAIpC,MAAA,QAAQ,EAAE;AAJ0B,KAAtC;AAMD;AACF;;AAzDD,OAAA,CAAA,OAAA,GAAA,QAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * If no existing window.web3 is found, this function injects a web3 \"shim\" to\n * not break dapps that rely on window.web3.currentProvider.\n *\n * @param provider - The provider to set as window.web3.currentProvider.\n * @param log - The logging API to use.\n */\nfunction shimWeb3(provider, log = console) {\n    let loggedCurrentProvider = false;\n    let loggedMissingProperty = false;\n    if (!window.web3) {\n        const SHIM_IDENTIFIER = '__isMetaMaskShim__';\n        let web3Shim = { currentProvider: provider };\n        Object.defineProperty(web3Shim, SHIM_IDENTIFIER, {\n            value: true,\n            enumerable: true,\n            configurable: false,\n            writable: false,\n        });\n        web3Shim = new Proxy(web3Shim, {\n            get: (target, property, ...args) => {\n                if (property === 'currentProvider' && !loggedCurrentProvider) {\n                    loggedCurrentProvider = true;\n                    log.warn('You are accessing the MetaMask window.web3.currentProvider shim. This property is deprecated; use window.ethereum instead. For details, see: https://docs.metamask.io/guide/provider-migration.html#replacing-window-web3');\n                }\n                else if (property !== 'currentProvider' &&\n                    property !== SHIM_IDENTIFIER &&\n                    !loggedMissingProperty) {\n                    loggedMissingProperty = true;\n                    log.error(`MetaMask no longer injects web3. For details, see: https://docs.metamask.io/guide/provider-migration.html#replacing-window-web3`);\n                    provider\n                        .request({ method: 'metamask_logWeb3ShimUsage' })\n                        .catch((error) => {\n                        log.debug('MetaMask: Failed to log web3 shim usage.', error);\n                    });\n                }\n                return Reflect.get(target, property, ...args);\n            },\n            set: (...args) => {\n                log.warn('You are accessing the MetaMask window.web3 shim. This object is deprecated; use window.ethereum instead. For details, see: https://docs.metamask.io/guide/provider-migration.html#replacing-window-web3');\n                return Reflect.set(...args);\n            },\n        });\n        Object.defineProperty(window, 'web3', {\n            value: web3Shim,\n            enumerable: false,\n            configurable: true,\n            writable: true,\n        });\n    }\n}\nexports.default = shimWeb3;\n//# sourceMappingURL=shimWeb3.js.map"]},"metadata":{},"sourceType":"script"}