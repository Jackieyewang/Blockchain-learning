{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = expose;\n\nfunction expose(funcName, func, opts) {\n  opts = opts || {};\n  var addListener = opts.addListener || window.addEventListener;\n  var removeListener = opts.removeListener || window.removeEventListener;\n  var postMessage = opts.postMessage || window.postMessage;\n  var targetOrigin = opts.targetOrigin || '*';\n\n  var getMessageData = opts.getMessageData || function (event) {\n    return event.data;\n  };\n\n  var isCallback = opts.isCallback || false;\n\n  var handler = function handler() {\n    var data = getMessageData.apply(null, arguments);\n    if (!data) return;\n    if (data.sender !== 'postmsg-rpc/client' || data.func !== funcName) return;\n    var msg = {\n      sender: 'postmsg-rpc/server',\n      id: data.id\n    };\n\n    var onSuccess = function onSuccess(res) {\n      msg.res = res;\n      postMessage(msg, targetOrigin);\n    };\n\n    var onError = function onError(err) {\n      msg.err = Object.assign({\n        message: err.message\n      }, err.output && err.output.payload);\n\n      if (process.env.NODE_ENV !== 'production') {\n        msg.err.stack = msg.err.stack || err.stack;\n      }\n\n      postMessage(msg, targetOrigin);\n    };\n\n    if (isCallback) {\n      func.apply(null, data.args.concat(function (err, res) {\n        if (err) return onError(err);\n        onSuccess(res);\n      }));\n    } else {\n      var res = func.apply(null, data.args);\n      Promise.resolve(res).then(onSuccess).catch(onError);\n    }\n  };\n\n  addListener('message', handler);\n  return {\n    close: function close() {\n      return removeListener('message', handler);\n    }\n  };\n}","map":{"version":3,"sources":["../src/server.js"],"names":["expose","opts","addListener","window","removeListener","postMessage","targetOrigin","getMessageData","event","isCallback","handler","data","msg","sender","id","onSuccess","onError","Object","message","err","process","func","res","Promise","close"],"mappings":"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","sourcesContent":["export default function expose (funcName, func, opts) {\n  opts = opts || {}\n\n  const addListener = opts.addListener || window.addEventListener\n  const removeListener = opts.removeListener || window.removeEventListener\n  const postMessage = opts.postMessage || window.postMessage\n  const targetOrigin = opts.targetOrigin || '*'\n  const getMessageData = opts.getMessageData || ((event) => event.data)\n  const isCallback = opts.isCallback || false\n\n  const handler = function () {\n    const data = getMessageData.apply(null, arguments)\n    if (!data) return\n    if (data.sender !== 'postmsg-rpc/client' || data.func !== funcName) return\n\n    const msg = { sender: 'postmsg-rpc/server', id: data.id }\n\n    const onSuccess = (res) => {\n      msg.res = res\n      postMessage(msg, targetOrigin)\n    }\n\n    const onError = (err) => {\n      msg.err = Object.assign({ message: err.message }, err.output && err.output.payload)\n\n      if (process.env.NODE_ENV !== 'production') {\n        msg.err.stack = msg.err.stack || err.stack\n      }\n\n      postMessage(msg, targetOrigin)\n    }\n\n    if (isCallback) {\n      func.apply(null, data.args.concat((err, res) => {\n        if (err) return onError(err)\n        onSuccess(res)\n      }))\n    } else {\n      const res = func.apply(null, data.args)\n      Promise.resolve(res).then(onSuccess).catch(onError)\n    }\n  }\n\n  addListener('message', handler)\n\n  return { close: () => removeListener('message', handler) }\n}\n"]},"metadata":{},"sourceType":"script"}