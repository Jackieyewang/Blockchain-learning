{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PolkadotAuthProvider = void 0;\n\nconst caip_1 = require(\"caip\");\n\nconst util_1 = require(\"./util\");\n\nconst uint8arrays = __importStar(require(\"uint8arrays\"));\n\nconst stringHex = str => `0x${uint8arrays.toString(uint8arrays.fromString(str), \"base16\")}`;\n\nconst CHAIN_ID = \"polkadot:b0a8d493285c2df73290dfb7e61f870f\";\n\nclass PolkadotAuthProvider {\n  constructor(provider, address) {\n    this.provider = provider;\n    this.address = address;\n    this.isAuthProvider = true;\n  }\n\n  async authenticate(message) {\n    throw new Error(`Not Implemented: PolkadotAuthProvider#authenticate, ${message}`);\n  }\n\n  async createLink(did) {\n    const {\n      message,\n      timestamp\n    } = util_1.getConsentMessage(did);\n    const linkMessageHex = stringHex(message);\n    const account = await this.accountId();\n    const res = await this.provider.signRaw({\n      address: this.address,\n      data: linkMessageHex,\n      type: \"bytes\"\n    });\n    return {\n      version: 2,\n      type: \"eoa\",\n      message: linkMessageHex,\n      signature: res.signature,\n      account: account.toString(),\n      timestamp: timestamp\n    };\n  }\n\n  async accountId() {\n    return new caip_1.AccountID({\n      address: this.address,\n      chainId: CHAIN_ID\n    });\n  }\n\n  withAddress(address) {\n    return new PolkadotAuthProvider(this.provider, address);\n  }\n\n}\n\nexports.PolkadotAuthProvider = PolkadotAuthProvider;","map":{"version":3,"sources":["../src/polkadot.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAA,MAAA,GAAA,OAAA,CAAA,MAAA,CAAA;;AAEA,MAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,MAAA,WAAA,GAAA,YAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;AAEA,MAAM,SAAS,GAAI,GAAD,IAChB,KAAK,WAAW,CAAC,QAAZ,CAAqB,WAAW,CAAC,UAAZ,CAAuB,GAAvB,CAArB,EAAkD,QAAlD,CAA2D,EADlE;;AAGA,MAAM,QAAQ,GAAG,2CAAjB;;AAEA,MAAa,oBAAb,CAAiC;AAG/B,EAAA,WAAA,CACmB,QADnB,EAEmB,OAFnB,EAEkC;AADf,SAAA,QAAA,GAAA,QAAA;AACA,SAAA,OAAA,GAAA,OAAA;AAJV,SAAA,cAAA,GAAiB,IAAjB;AAKL;;AAEc,QAAZ,YAAY,CAAC,OAAD,EAAgB;AAChC,UAAM,IAAI,KAAJ,CAAU,uDAAuD,OAAO,EAAxE,CAAN;AACD;;AAEe,QAAV,UAAU,CAAC,GAAD,EAAY;AAC1B,UAAM;AAAE,MAAA,OAAF;AAAW,MAAA;AAAX,QAAyB,MAAA,CAAA,iBAAA,CAAkB,GAAlB,CAA/B;AACA,UAAM,cAAc,GAAG,SAAS,CAAC,OAAD,CAAhC;AACA,UAAM,OAAO,GAAG,MAAM,KAAK,SAAL,EAAtB;AACA,UAAM,GAAG,GAAG,MAAM,KAAK,QAAL,CAAc,OAAd,CAAsB;AACtC,MAAA,OAAO,EAAE,KAAK,OADwB;AAEtC,MAAA,IAAI,EAAE,cAFgC;AAGtC,MAAA,IAAI,EAAE;AAHgC,KAAtB,CAAlB;AAKA,WAAO;AACL,MAAA,OAAO,EAAE,CADJ;AAEL,MAAA,IAAI,EAAE,KAFD;AAGL,MAAA,OAAO,EAAE,cAHJ;AAIL,MAAA,SAAS,EAAE,GAAG,CAAC,SAJV;AAKL,MAAA,OAAO,EAAE,OAAO,CAAC,QAAR,EALJ;AAML,MAAA,SAAS,EAAE;AANN,KAAP;AAQD;;AAEc,QAAT,SAAS,GAAA;AACb,WAAO,IAAI,MAAA,CAAA,SAAJ,CAAc;AAAE,MAAA,OAAO,EAAE,KAAK,OAAhB;AAAyB,MAAA,OAAO,EAAE;AAAlC,KAAd,CAAP;AACD;;AAED,EAAA,WAAW,CAAC,OAAD,EAAgB;AACzB,WAAO,IAAI,oBAAJ,CAAyB,KAAK,QAA9B,EAAwC,OAAxC,CAAP;AACD;;AArC8B;;AAAjC,OAAA,CAAA,oBAAA,GAAA,oBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PolkadotAuthProvider = void 0;\nconst caip_1 = require(\"caip\");\nconst util_1 = require(\"./util\");\nconst uint8arrays = __importStar(require(\"uint8arrays\"));\nconst stringHex = (str) => `0x${uint8arrays.toString(uint8arrays.fromString(str), \"base16\")}`;\nconst CHAIN_ID = \"polkadot:b0a8d493285c2df73290dfb7e61f870f\";\nclass PolkadotAuthProvider {\n    constructor(provider, address) {\n        this.provider = provider;\n        this.address = address;\n        this.isAuthProvider = true;\n    }\n    async authenticate(message) {\n        throw new Error(`Not Implemented: PolkadotAuthProvider#authenticate, ${message}`);\n    }\n    async createLink(did) {\n        const { message, timestamp } = util_1.getConsentMessage(did);\n        const linkMessageHex = stringHex(message);\n        const account = await this.accountId();\n        const res = await this.provider.signRaw({\n            address: this.address,\n            data: linkMessageHex,\n            type: \"bytes\",\n        });\n        return {\n            version: 2,\n            type: \"eoa\",\n            message: linkMessageHex,\n            signature: res.signature,\n            account: account.toString(),\n            timestamp: timestamp,\n        };\n    }\n    async accountId() {\n        return new caip_1.AccountID({ address: this.address, chainId: CHAIN_ID });\n    }\n    withAddress(address) {\n        return new PolkadotAuthProvider(this.provider, address);\n    }\n}\nexports.PolkadotAuthProvider = PolkadotAuthProvider;\n//# sourceMappingURL=polkadot.js.map"]},"metadata":{},"sourceType":"script"}