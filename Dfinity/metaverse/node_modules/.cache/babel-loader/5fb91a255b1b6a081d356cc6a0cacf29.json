{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/ownership/Datadidi/test/DataDiDi/packages/metaverse/src/pages/NFTView/Menus.tsx\";\nimport { BugOutlined, CloudOutlined, DesktopOutlined, TagsOutlined } from '@ant-design/icons';\nimport { Menu } from 'antd';\nimport { Component } from 'react';\nimport { COLLECTION_TYPE, STORAGE_TYPE } from '../../utils/constants';\nimport EventBus from '../../utils/EventBus';\nimport storage from '../../utils/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  SubMenu\n} = Menu;\nexport default class Menus extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSelect = val => {\n      this.props.getBookmarks(val.key);\n    };\n\n    const DEFAULT_COLLECTIONS_MENUS = [];\n    const storedCollectionsNames = storage.getItem(STORAGE_TYPE.STORED_COLLECTIONS_NAMES) || [];\n    this.state = {\n      menus: [{\n        title: 'Collections',\n        icon: /*#__PURE__*/_jsxDEV(TagsOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this),\n        children: [...DEFAULT_COLLECTIONS_MENUS, ...storedCollectionsNames]\n      }]\n    };\n    EventBus.on('SET_COLLECTIONS_MENUS', res => {\n      this.setState({\n        menus: [{\n          title: 'Collections',\n          icon: /*#__PURE__*/_jsxDEV(TagsOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 19\n          }, this),\n          children: [...DEFAULT_COLLECTIONS_MENUS, ...res]\n        }]\n      });\n    });\n  }\n\n  render() {\n    const {\n      menus\n    } = this.state;\n    const defaultSelectedKeys = COLLECTION_TYPE.AllBookmarks;\n    return /*#__PURE__*/_jsxDEV(Menu, {\n      expandIcon: () => '',\n      theme: \"dark\",\n      defaultSelectedKeys: [defaultSelectedKeys],\n      forceSubMenuRender: true,\n      mode: \"inline\",\n      openKeys: ['Collections'],\n      onSelect: this.onSelect,\n      style: {\n        fontSize: '12px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n        icon: /*#__PURE__*/_jsxDEV(CloudOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 61\n        }, this),\n        children: COLLECTION_TYPE.AllBookmarks\n      }, COLLECTION_TYPE.AllBookmarks, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        icon: /*#__PURE__*/_jsxDEV(DesktopOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 54\n        }, this),\n        children: COLLECTION_TYPE.Trash\n      }, COLLECTION_TYPE.Trash, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        icon: /*#__PURE__*/_jsxDEV(BugOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 57\n        }, this),\n        children: COLLECTION_TYPE.Unsorted\n      }, COLLECTION_TYPE.Unsorted, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), menus.map(menu => /*#__PURE__*/_jsxDEV(SubMenu, {\n        title: menu.title,\n        icon: menu.icon,\n        children: menu.children.map(item => /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: item\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this))\n      }, menu.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/apple/Documents/ownership/Datadidi/test/DataDiDi/packages/metaverse/src/pages/NFTView/Menus.tsx"],"names":["BugOutlined","CloudOutlined","DesktopOutlined","TagsOutlined","Menu","Component","COLLECTION_TYPE","STORAGE_TYPE","EventBus","storage","SubMenu","Menus","constructor","props","onSelect","val","getBookmarks","key","DEFAULT_COLLECTIONS_MENUS","storedCollectionsNames","getItem","STORED_COLLECTIONS_NAMES","state","menus","title","icon","children","on","res","setState","render","defaultSelectedKeys","AllBookmarks","fontSize","Trash","Unsorted","map","menu","item"],"mappings":"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","sourcesContent":["import { BugOutlined, CloudOutlined, DesktopOutlined, TagsOutlined } from '@ant-design/icons';\nimport { Menu } from 'antd';\nimport { Component } from 'react';\n\nimport { COLLECTION_TYPE, STORAGE_TYPE } from '../../utils/constants';\nimport EventBus from '../../utils/EventBus';\nimport storage from '../../utils/storage';\n\nconst { SubMenu } = Menu;\n\ninterface MenusState {\n  menus: any[];\n}\n\ninterface MenusProps {\n  getBookmarks: Function;\n}\n\nexport default class Menus extends Component<MenusProps, MenusState> {\n  constructor(props: MenusProps) {\n    super(props);\n\n    const DEFAULT_COLLECTIONS_MENUS: string[] = [];\n\n    const storedCollectionsNames = storage.getItem(STORAGE_TYPE.STORED_COLLECTIONS_NAMES) || [];\n\n    this.state = {\n      menus: [\n        {\n          title: 'Collections',\n          icon: <TagsOutlined />,\n          children: [...DEFAULT_COLLECTIONS_MENUS, ...storedCollectionsNames],\n        },\n      ],\n    };\n\n    EventBus.on('SET_COLLECTIONS_MENUS', (res) => {\n      this.setState({\n        menus: [\n          {\n            title: 'Collections',\n            icon: <TagsOutlined />,\n            children: [...DEFAULT_COLLECTIONS_MENUS, ...res],\n          },\n        ],\n      });\n    });\n  }\n\n  onSelect = (val: any) => {\n    this.props.getBookmarks(val.key);\n  };\n\n  render() {\n    const { menus } = this.state;\n    const defaultSelectedKeys = COLLECTION_TYPE.AllBookmarks;\n\n    return (\n      <Menu\n        expandIcon={() => ''}\n        theme=\"dark\"\n        defaultSelectedKeys={[defaultSelectedKeys]}\n        forceSubMenuRender\n        mode=\"inline\"\n        openKeys={['Collections']}\n        onSelect={this.onSelect}\n        style={{ fontSize: '12px' }}\n      >\n        <Menu.Item key={COLLECTION_TYPE.AllBookmarks} icon={<CloudOutlined />}>\n          {COLLECTION_TYPE.AllBookmarks}\n        </Menu.Item>\n        <Menu.Item key={COLLECTION_TYPE.Trash} icon={<DesktopOutlined />}>\n          {COLLECTION_TYPE.Trash}\n        </Menu.Item>\n        <Menu.Item key={COLLECTION_TYPE.Unsorted} icon={<BugOutlined />}>\n          {COLLECTION_TYPE.Unsorted}\n        </Menu.Item>\n        {menus.map((menu) => (\n          <SubMenu key={menu.title} title={menu.title} icon={menu.icon}>\n            {menu.children.map((item: string) => (\n              <Menu.Item key={item}>{item}</Menu.Item>\n            ))}\n          </SubMenu>\n        ))}\n      </Menu>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}