{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/ownership/Datadidi/test/DataDiDi/packages/metaverse/src/pages/NFTView/NFTView.tsx\";\nimport { NFTE } from '@nfte/react';\nimport { Descriptions, Modal, Spin, Tag, Layout, Button, Dropdown, Menu } from 'antd';\nimport { Component } from 'react';\nimport Masonry from 'react-masonry-component'; // import { ethers } from 'ethers';\n// import { FetchWrapper } from 'nft-capture';\n\nimport { DownOutlined, UserOutlined, ContainerOutlined, QuestionCircleOutlined, SettingOutlined, LogoutOutlined, WalletOutlined, TeamOutlined, RobotOutlined, CrownOutlined } from '@ant-design/icons';\nimport { COLLECTION_TYPE, STORAGE_TYPE } from '../../utils/constants';\nimport { getCustomBookmarks } from './utils';\nimport storage from '../../utils/storage';\nimport Menus from './Menus';\nimport './NFTView.less';\nimport logo from '../../assets/images/logo.png';\nimport metamaskLogo from \"../../assets/images/metamask-fox.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Content,\n  Sider,\n  Header\n} = Layout;\n\nfunction limitWords(txt) {\n  let str = txt;\n  str = `${str.slice(0, 12)}...`;\n  return str;\n}\n\nexport default class NFTView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getBookmarks = async (collection = COLLECTION_TYPE.AllBookmarks) => {\n      try {\n        if (this.state.loading) {\n          return;\n        }\n\n        if (collection === COLLECTION_TYPE.Unsorted) {\n          collection = '';\n        }\n\n        this.setState({\n          loading: true\n        });\n        const {\n          list,\n          did\n        } = await getCustomBookmarks(collection); // const fetcher = [\"ethers\", { ethers, provider: ethers.getDefaultProvider() }]\n        // const fetchWrapper = new FetchWrapper(fetcher)\n        // const nft = await fetchWrapper.fetchNft(\n        //   \"0xd07dc4262bcdbf85190c01c996b4c06a461d2430\",\n        //   \"90473\"\n        // )\n        // console.log(nft)\n\n        this.setState({\n          list,\n          did\n        });\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setTimeout(() => {\n          this.setState({\n            loading: false\n          });\n        }, 500);\n      }\n    };\n\n    this.open = item => {\n      this.setState({\n        current: item,\n        visible: true,\n        modalLoading: true\n      });\n      setTimeout(() => {\n        this.setState({\n          modalLoading: false\n        });\n      }, 1000);\n    };\n\n    this.onClose = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.renderModal = () => {\n      var _current$image;\n\n      const {\n        current,\n        visible,\n        modalLoading\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"\",\n        visible: visible,\n        onCancel: this.onClose,\n        footer: null,\n        width: \"1020px\",\n        children: /*#__PURE__*/_jsxDEV(Spin, {\n          spinning: modalLoading,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-left\",\n              children: ((_current$image = current.image) === null || _current$image === void 0 ? void 0 : _current$image.includes('.mp4')) ? /*#__PURE__*/_jsxDEV(\"video\", {\n                autoPlay: true,\n                src: current.image,\n                className: \"pic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                src: current.image,\n                className: \"pic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"title\",\n                children: current.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(NFTE, {\n                contract: current.contract,\n                tokenId: current.tokenId,\n                children: ({\n                  data\n                }) => /*#__PURE__*/_jsxDEV(Descriptions, {\n                  title: \"\",\n                  column: 1,\n                  children: [/*#__PURE__*/_jsxDEV(Descriptions.Item, {\n                    label: \"tokenId\",\n                    children: current.tokenId\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n                    label: \"collections\",\n                    children: current === null || current === void 0 ? void 0 : current.collections\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n                    label: \"tags\",\n                    children: /*#__PURE__*/_jsxDEV(Tag, {\n                      color: \"orange\",\n                      children: current === null || current === void 0 ? void 0 : current.tags\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n                    label: \"description\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"desc\",\n                      children: data === null || data === void 0 ? void 0 : data.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 147,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n                    label: \"platform\",\n                    children: \"OpenSea\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n                    label: \"blockNumber\",\n                    children: data === null || data === void 0 ? void 0 : data.blockNumber\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n                    label: \"timestamp\",\n                    children: data === null || data === void 0 ? void 0 : data.timestamp\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n                    label: \"href\",\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      target: \"_blank\",\n                      href: current.url,\n                      rel: \"noreferrer\",\n                      children: current.url\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderNFTView = () => {\n      const {\n        list,\n        loading\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nft-view\",\n        children: /*#__PURE__*/_jsxDEV(Spin, {\n          spinning: loading,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"masonry-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(Masonry, {\n              style: {\n                marginTop: '20px'\n              },\n              children: list.map((item, index) => {\n                var _item$image;\n\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"nft-item\",\n                  onClick: () => this.open(item),\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"item-inner\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"pic-wrapper\",\n                      children: ((_item$image = item.image) === null || _item$image === void 0 ? void 0 : _item$image.includes('.mp4')) ? /*#__PURE__*/_jsxDEV(\"video\", {\n                        autoPlay: true,\n                        src: item.image,\n                        className: \"pic\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 180,\n                        columnNumber: 25\n                      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: item.image,\n                        className: \"pic\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 182,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-wrapper\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"name\",\n                        children: item.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 186,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"description\",\n                        children: item.description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 187,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"tag\",\n                        children: \"OpenSea\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 189,\n                        columnNumber: 23\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 19\n                  }, this)\n                }, item.contract, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 17\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderLoginButton = () => {\n      const {\n        SubMenu\n      } = Menu;\n      const {\n        did\n      } = this.state;\n\n      const _menu = /*#__PURE__*/_jsxDEV(Menu, {\n        className: \"Drop-menu\",\n        theme: \"dark\",\n        children: [/*#__PURE__*/_jsxDEV(SubMenu, {\n          title: \"My Account\",\n          icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 43\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n            icon: /*#__PURE__*/_jsxDEV(ContainerOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 42\n            }, this),\n            children: \"My Profile\"\n          }, \"Profile\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n            icon: /*#__PURE__*/_jsxDEV(SettingOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 42\n            }, this),\n            children: \"Setting\"\n          }, \"Setting\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n            icon: /*#__PURE__*/_jsxDEV(QuestionCircleOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 39\n            }, this),\n            children: \"Help\"\n          }, \"Help\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n            icon: /*#__PURE__*/_jsxDEV(LogoutOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 41\n            }, this),\n            children: \"Log Out\"\n          }, \"logout\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          icon: /*#__PURE__*/_jsxDEV(WalletOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 39\n          }, this),\n          children: \"My Wallet\"\n        }, \"wallet\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          icon: /*#__PURE__*/_jsxDEV(RobotOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 37\n          }, this),\n          children: \"My Collections\"\n        }, \"idea\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          icon: /*#__PURE__*/_jsxDEV(TeamOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 38\n          }, this),\n          children: \"My Tribe\"\n        }, \"tribe\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          icon: /*#__PURE__*/_jsxDEV(CrownOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 42\n          }, this),\n          children: \"Metaverse\"\n        }, \"metaverse\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 7\n      }, this);\n\n      if (!did) {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          className: \"login-wrapper\",\n          onClick: () => this.getBookmarks(),\n          children: [\"Login with \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: metamaskLogo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 9\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Dropdown, {\n        overlay: _menu,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"login-wrapper\",\n          children: [limitWords(did), /*#__PURE__*/_jsxDEV(DownOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.state = {\n      list: storage.getItem(STORAGE_TYPE.STORED_COLLECTIONS) || [],\n      visible: false,\n      modalLoading: false,\n      current: {\n        image: ''\n      },\n      loading: false,\n      did: ''\n    };\n  }\n\n  async componentDidMount() {\n    this.getBookmarks();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"DataDiDi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), this.renderLoginButton()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Layout, {\n        className: \"content-layout\",\n        children: [/*#__PURE__*/_jsxDEV(Sider, {\n          className: \"menus\",\n          width: \"164px\",\n          children: /*#__PURE__*/_jsxDEV(Menus, {\n            getBookmarks: this.getBookmarks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Content, {\n          children: this.renderNFTView()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), this.renderModal()]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/apple/Documents/ownership/Datadidi/test/DataDiDi/packages/metaverse/src/pages/NFTView/NFTView.tsx"],"names":["NFTE","Descriptions","Modal","Spin","Tag","Layout","Button","Dropdown","Menu","Component","Masonry","DownOutlined","UserOutlined","ContainerOutlined","QuestionCircleOutlined","SettingOutlined","LogoutOutlined","WalletOutlined","TeamOutlined","RobotOutlined","CrownOutlined","COLLECTION_TYPE","STORAGE_TYPE","getCustomBookmarks","storage","Menus","logo","Content","Sider","Header","limitWords","txt","str","slice","NFTView","constructor","props","getBookmarks","collection","AllBookmarks","state","loading","Unsorted","setState","list","did","error","console","log","setTimeout","open","item","current","visible","modalLoading","onClose","renderModal","image","includes","title","contract","tokenId","data","collections","tags","description","blockNumber","timestamp","url","renderNFTView","marginTop","map","index","renderLoginButton","SubMenu","_menu","metamaskLogo","getItem","STORED_COLLECTIONS","componentDidMount","render"],"mappings":"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","sourcesContent":["import { NFTE } from '@nfte/react';\nimport { Descriptions, Modal, Spin, Tag, Layout, Button, Dropdown, Menu } from 'antd';\nimport type { Bookmark } from 'idx-common';\nimport { Component } from 'react';\nimport Masonry from 'react-masonry-component';\n\n// import { ethers } from 'ethers';\n// import { FetchWrapper } from 'nft-capture';\n\nimport {\n  DownOutlined,\n  UserOutlined,\n  ContainerOutlined,\n  QuestionCircleOutlined,\n  SettingOutlined,\n  LogoutOutlined,\n  WalletOutlined,\n  TeamOutlined,\n  RobotOutlined,\n  CrownOutlined,\n} from '@ant-design/icons';\nimport { COLLECTION_TYPE, STORAGE_TYPE } from '../../utils/constants';\nimport { getCustomBookmarks } from './utils';\nimport storage from '../../utils/storage';\nimport Menus from './Menus';\nimport './NFTView.less';\nimport logo from '../../assets/images/logo.png';\nimport metamaskLogo from '../../assets/images/metamask-fox.svg';\n\nconst { Content, Sider, Header } = Layout;\ninterface NFTViewState {\n  visible: boolean;\n  current: Bookmark;\n  modalLoading: boolean;\n  list: Bookmark[];\n  loading: boolean;\n  did: string;\n}\n\ninterface NFTViewProps {\n  history: any;\n}\n\nfunction limitWords(txt: any) {\n  let str = txt;\n  str = `${str.slice(0, 12)}...`;\n  return str;\n}\n\nexport default class NFTView extends Component<NFTViewProps, NFTViewState> {\n  constructor(props: NFTViewProps) {\n    super(props);\n\n    this.state = {\n      list: storage.getItem(STORAGE_TYPE.STORED_COLLECTIONS) || [],\n      visible: false,\n      modalLoading: false,\n      current: { image: '' } as Bookmark,\n      loading: false,\n      did: '',\n    };\n  }\n\n  async componentDidMount() {\n    this.getBookmarks();\n  }\n\n  getBookmarks = async (collection: string = COLLECTION_TYPE.AllBookmarks) => {\n    try {\n      if (this.state.loading) {\n        return;\n      }\n\n      if (collection === COLLECTION_TYPE.Unsorted) {\n        collection = '';\n      }\n\n      this.setState({ loading: true });\n      const { list, did } = await getCustomBookmarks(collection);\n\n      // const fetcher = [\"ethers\", { ethers, provider: ethers.getDefaultProvider() }]\n      // const fetchWrapper = new FetchWrapper(fetcher)\n\n      // const nft = await fetchWrapper.fetchNft(\n      //   \"0xd07dc4262bcdbf85190c01c996b4c06a461d2430\",\n      //   \"90473\"\n      // )\n\n      // console.log(nft)\n\n      this.setState({ list, did });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setTimeout(() => {\n        this.setState({ loading: false });\n      }, 500);\n    }\n  };\n\n  open = (item: Bookmark) => {\n    this.setState({\n      current: item,\n      visible: true,\n      modalLoading: true,\n    });\n\n    setTimeout(() => {\n      this.setState({ modalLoading: false });\n    }, 1000);\n  };\n\n  onClose = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  renderModal = () => {\n    const { current, visible, modalLoading } = this.state;\n\n    return (\n      <Modal title=\"\" visible={visible} onCancel={this.onClose} footer={null} width=\"1020px\">\n        <Spin spinning={modalLoading}>\n          <div className=\"modal-wrapper\">\n            <div className=\"modal-left\">\n              {current.image?.includes('.mp4') ? (\n                <video autoPlay src={current.image} className=\"pic\" />\n              ) : (\n                <img src={current.image} className=\"pic\" />\n              )}\n            </div>\n\n            <div className=\"modal-right\">\n              <div className=\"title\">{current.title}</div>\n              <NFTE contract={current.contract} tokenId={current.tokenId}>\n                {({ data }) => (\n                  <Descriptions title=\"\" column={1}>\n                    <Descriptions.Item label=\"tokenId\">{current.tokenId}</Descriptions.Item>\n                    <Descriptions.Item label=\"collections\">\n                      {current?.collections}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"tags\">\n                      <Tag color=\"orange\">{current?.tags}</Tag>\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"description\">\n                      <div className=\"desc\">{data?.description}</div>\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"platform\">OpenSea</Descriptions.Item>\n                    <Descriptions.Item label=\"blockNumber\">{data?.blockNumber}</Descriptions.Item>\n                    <Descriptions.Item label=\"timestamp\">{data?.timestamp}</Descriptions.Item>\n                    <Descriptions.Item label=\"href\">\n                      <a target=\"_blank\" href={current.url} rel=\"noreferrer\">\n                        {current.url}\n                      </a>\n                    </Descriptions.Item>\n                  </Descriptions>\n                )}\n              </NFTE>\n            </div>\n          </div>\n        </Spin>\n      </Modal>\n    );\n  };\n\n  renderNFTView = () => {\n    const { list, loading } = this.state;\n\n    return (\n      <div className=\"nft-view\">\n        <Spin spinning={loading}>\n          <div className=\"masonry-wrapper\">\n            <Masonry style={{ marginTop: '20px' }}>\n              {list.map((item, index) => (\n                <div className=\"nft-item\" key={item.contract} onClick={() => this.open(item)}>\n                  <div className=\"item-inner\">\n                    <div className=\"pic-wrapper\">\n                      {item.image?.includes('.mp4') ? (\n                        <video autoPlay src={item.image} className=\"pic\" />\n                      ) : (\n                        <img src={item.image} className=\"pic\" />\n                      )}\n                    </div>\n                    <div className=\"text-wrapper\">\n                      <div className=\"name\">{item.title}</div>\n                      <div className=\"description\">{item.description}</div>\n\n                      <div className=\"tag\">OpenSea</div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </Masonry>\n          </div>\n        </Spin>\n      </div>\n    );\n  };\n\n  renderLoginButton = () => {\n    const { SubMenu } = Menu;\n    const { did } = this.state;\n\n    const _menu = (\n      <Menu className=\"Drop-menu\" theme=\"dark\">\n        <SubMenu title=\"My Account\" icon={<UserOutlined />}>\n          <Menu.Item key=\"Profile\" icon={<ContainerOutlined />}>\n            My Profile\n          </Menu.Item>\n          <Menu.Item key=\"Setting\" icon={<SettingOutlined />}>\n            Setting\n          </Menu.Item>\n          <Menu.Item key=\"Help\" icon={<QuestionCircleOutlined />}>\n            Help\n          </Menu.Item>\n          <Menu.Item key=\"logout\" icon={<LogoutOutlined />}>\n            Log Out\n          </Menu.Item>\n        </SubMenu>\n        <Menu.Item key=\"wallet\" icon={<WalletOutlined />}>\n          My Wallet\n        </Menu.Item>\n        <Menu.Item key=\"idea\" icon={<RobotOutlined />}>\n          My Collections\n        </Menu.Item>\n        <Menu.Item key=\"tribe\" icon={<TeamOutlined />}>\n          My Tribe\n        </Menu.Item>\n        <Menu.Item key=\"metaverse\" icon={<CrownOutlined />}>\n          Metaverse\n        </Menu.Item>\n      </Menu>\n    );\n\n    if (!did) {\n      return (\n        <Button className=\"login-wrapper\" onClick={() => this.getBookmarks()}>\n          Login with <img src={metamaskLogo} />\n        </Button>\n      );\n    }\n\n    return (\n      <Dropdown overlay={_menu}>\n        <Button className=\"login-wrapper\">\n          {limitWords(did)}\n          <DownOutlined />\n        </Button>\n      </Dropdown>\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <Header>\n          <div className=\"logo-wrapper\">\n            <img src={logo} />\n            <span>DataDiDi</span>\n          </div>\n\n          {this.renderLoginButton()}\n        </Header>\n\n        <Layout className=\"content-layout\">\n          <Sider className=\"menus\" width=\"164px\">\n            <Menus getBookmarks={this.getBookmarks} />\n          </Sider>\n\n          <Content>{this.renderNFTView()}</Content>\n        </Layout>\n\n        {this.renderModal()}\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}