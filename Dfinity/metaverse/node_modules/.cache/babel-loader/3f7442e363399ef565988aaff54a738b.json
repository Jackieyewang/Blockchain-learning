{"ast":null,"code":"import { TileDocument } from '@ceramicnetwork/stream-tile';\nimport { Caip10Link } from '@ceramicnetwork/stream-caip10-link';\nimport { definitions, schemas } from '@ceramicstudio/idx-constants';\nimport { AccountID } from 'caip';\nimport fetch from 'cross-fetch';\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar runtime_1 = /*#__PURE__*/createCommonjsModule(function (module) {\n  /**\n   * Copyright (c) 2014-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n  var runtime = function (exports) {\n    var Op = Object.prototype;\n    var hasOwn = Op.hasOwnProperty;\n    var undefined$1; // More compressible than void 0.\n\n    var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n    var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n    var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n    var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n    function define(obj, key, value) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n      return obj[key];\n    }\n\n    try {\n      // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n      define({}, \"\");\n    } catch (err) {\n      define = function define(obj, key, value) {\n        return obj[key] = value;\n      };\n    }\n\n    function wrap(innerFn, outerFn, self, tryLocsList) {\n      // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n      var generator = Object.create(protoGenerator.prototype);\n      var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n      // .throw, and .return methods.\n\n      generator._invoke = makeInvokeMethod(innerFn, self, context);\n      return generator;\n    }\n\n    exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n    // record like context.tryEntries[i].completion. This interface could\n    // have been (and was previously) designed to take a closure to be\n    // invoked without arguments, but in all the cases we care about we\n    // already have an existing method we want to call, so there's no need\n    // to create a new function object. We can even get away with assuming\n    // the method takes exactly one argument, since that happens to be true\n    // in every case, so we don't have to touch the arguments object. The\n    // only additional allocation required is the completion record, which\n    // has a stable shape and so hopefully should be cheap to allocate.\n\n    function tryCatch(fn, obj, arg) {\n      try {\n        return {\n          type: \"normal\",\n          arg: fn.call(obj, arg)\n        };\n      } catch (err) {\n        return {\n          type: \"throw\",\n          arg: err\n        };\n      }\n    }\n\n    var GenStateSuspendedStart = \"suspendedStart\";\n    var GenStateSuspendedYield = \"suspendedYield\";\n    var GenStateExecuting = \"executing\";\n    var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n    // breaking out of the dispatch switch statement.\n\n    var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n    // .constructor.prototype properties for functions that return Generator\n    // objects. For full spec compliance, you may wish to configure your\n    // minifier not to mangle the names of these two functions.\n\n    function Generator() {}\n\n    function GeneratorFunction() {}\n\n    function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n    // don't natively support it.\n\n\n    var IteratorPrototype = {};\n\n    IteratorPrototype[iteratorSymbol] = function () {\n      return this;\n    };\n\n    var getProto = Object.getPrototypeOf;\n    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n      // This environment has a native %IteratorPrototype%; use it instead\n      // of the polyfill.\n      IteratorPrototype = NativeIteratorPrototype;\n    }\n\n    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n    GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n    GeneratorFunctionPrototype.constructor = GeneratorFunction;\n    GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"); // Helper for defining the .next, .throw, and .return methods of the\n    // Iterator interface in terms of a single ._invoke method.\n\n    function defineIteratorMethods(prototype) {\n      [\"next\", \"throw\", \"return\"].forEach(function (method) {\n        define(prototype, method, function (arg) {\n          return this._invoke(method, arg);\n        });\n      });\n    }\n\n    exports.isGeneratorFunction = function (genFun) {\n      var ctor = typeof genFun === \"function\" && genFun.constructor;\n      return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n      // do is to check its .name property.\n      (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n    };\n\n    exports.mark = function (genFun) {\n      if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n      } else {\n        genFun.__proto__ = GeneratorFunctionPrototype;\n        define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n      }\n\n      genFun.prototype = Object.create(Gp);\n      return genFun;\n    }; // Within the body of any async function, `await x` is transformed to\n    // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n    // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n    // meant to be awaited.\n\n\n    exports.awrap = function (arg) {\n      return {\n        __await: arg\n      };\n    };\n\n    function AsyncIterator(generator, PromiseImpl) {\n      function invoke(method, arg, resolve, reject) {\n        var record = tryCatch(generator[method], generator, arg);\n\n        if (record.type === \"throw\") {\n          reject(record.arg);\n        } else {\n          var result = record.arg;\n          var value = result.value;\n\n          if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n            return PromiseImpl.resolve(value.__await).then(function (value) {\n              invoke(\"next\", value, resolve, reject);\n            }, function (err) {\n              invoke(\"throw\", err, resolve, reject);\n            });\n          }\n\n          return PromiseImpl.resolve(value).then(function (unwrapped) {\n            // When a yielded Promise is resolved, its final value becomes\n            // the .value of the Promise<{value,done}> result for the\n            // current iteration.\n            result.value = unwrapped;\n            resolve(result);\n          }, function (error) {\n            // If a rejected Promise was yielded, throw the rejection back\n            // into the async generator function so it can be handled there.\n            return invoke(\"throw\", error, resolve, reject);\n          });\n        }\n      }\n\n      var previousPromise;\n\n      function enqueue(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n\n        return previousPromise = // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n        // invocations of the iterator.\n        callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      } // Define the unified helper method that is used to implement .next,\n      // .throw, and .return (see defineIteratorMethods).\n\n\n      this._invoke = enqueue;\n    }\n\n    defineIteratorMethods(AsyncIterator.prototype);\n\n    AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n      return this;\n    };\n\n    exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n    // AsyncIterator objects; they just return a Promise for the value of\n    // the final result produced by the iterator.\n\n    exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n      if (PromiseImpl === void 0) PromiseImpl = Promise;\n      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n      return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function (result) {\n        return result.done ? result.value : iter.next();\n      });\n    };\n\n    function makeInvokeMethod(innerFn, self, context) {\n      var state = GenStateSuspendedStart;\n      return function invoke(method, arg) {\n        if (state === GenStateExecuting) {\n          throw new Error(\"Generator is already running\");\n        }\n\n        if (state === GenStateCompleted) {\n          if (method === \"throw\") {\n            throw arg;\n          } // Be forgiving, per 25.3.3.3.3 of the spec:\n          // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n          return doneResult();\n        }\n\n        context.method = method;\n        context.arg = arg;\n\n        while (true) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (context.method === \"next\") {\n            // Setting context._sent for legacy support of Babel's\n            // function.sent implementation.\n            context.sent = context._sent = context.arg;\n          } else if (context.method === \"throw\") {\n            if (state === GenStateSuspendedStart) {\n              state = GenStateCompleted;\n              throw context.arg;\n            }\n\n            context.dispatchException(context.arg);\n          } else if (context.method === \"return\") {\n            context.abrupt(\"return\", context.arg);\n          }\n\n          state = GenStateExecuting;\n          var record = tryCatch(innerFn, self, context);\n\n          if (record.type === \"normal\") {\n            // If an exception is thrown from innerFn, we leave state ===\n            // GenStateExecuting and loop back for another invocation.\n            state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n            if (record.arg === ContinueSentinel) {\n              continue;\n            }\n\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          } else if (record.type === \"throw\") {\n            state = GenStateCompleted; // Dispatch the exception by looping back around to the\n            // context.dispatchException(context.arg) call above.\n\n            context.method = \"throw\";\n            context.arg = record.arg;\n          }\n        }\n      };\n    } // Call delegate.iterator[context.method](context.arg) and handle the\n    // result, either by returning a { value, done } result from the\n    // delegate iterator, or by modifying context.method and context.arg,\n    // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n    function maybeInvokeDelegate(delegate, context) {\n      var method = delegate.iterator[context.method];\n\n      if (method === undefined$1) {\n        // A .throw or .return when the delegate iterator has no .throw\n        // method always terminates the yield* loop.\n        context.delegate = null;\n\n        if (context.method === \"throw\") {\n          // Note: [\"return\"] must be used for ES3 parsing compatibility.\n          if (delegate.iterator[\"return\"]) {\n            // If the delegate iterator has a return method, give it a\n            // chance to clean up.\n            context.method = \"return\";\n            context.arg = undefined$1;\n            maybeInvokeDelegate(delegate, context);\n\n            if (context.method === \"throw\") {\n              // If maybeInvokeDelegate(context) changed context.method from\n              // \"return\" to \"throw\", let that override the TypeError below.\n              return ContinueSentinel;\n            }\n          }\n\n          context.method = \"throw\";\n          context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n        }\n\n        return ContinueSentinel;\n      }\n\n      var record = tryCatch(method, delegate.iterator, context.arg);\n\n      if (record.type === \"throw\") {\n        context.method = \"throw\";\n        context.arg = record.arg;\n        context.delegate = null;\n        return ContinueSentinel;\n      }\n\n      var info = record.arg;\n\n      if (!info) {\n        context.method = \"throw\";\n        context.arg = new TypeError(\"iterator result is not an object\");\n        context.delegate = null;\n        return ContinueSentinel;\n      }\n\n      if (info.done) {\n        // Assign the result of the finished delegate to the temporary\n        // variable specified by delegate.resultName (see delegateYield).\n        context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n        context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n        // exception, let the outer generator proceed normally. If\n        // context.method was \"next\", forget context.arg since it has been\n        // \"consumed\" by the delegate iterator. If context.method was\n        // \"return\", allow the original .return call to continue in the\n        // outer generator.\n\n        if (context.method !== \"return\") {\n          context.method = \"next\";\n          context.arg = undefined$1;\n        }\n      } else {\n        // Re-yield the result returned by the delegate method.\n        return info;\n      } // The delegate iterator is finished, so forget it and continue with\n      // the outer generator.\n\n\n      context.delegate = null;\n      return ContinueSentinel;\n    } // Define Generator.prototype.{next,throw,return} in terms of the\n    // unified ._invoke helper method.\n\n\n    defineIteratorMethods(Gp);\n    define(Gp, toStringTagSymbol, \"Generator\"); // A Generator should always return itself as the iterator object when the\n    // @@iterator function is called on it. Some browsers' implementations of the\n    // iterator prototype chain incorrectly implement this, causing the Generator\n    // object to not be returned from this call. This ensures that doesn't happen.\n    // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n    Gp[iteratorSymbol] = function () {\n      return this;\n    };\n\n    Gp.toString = function () {\n      return \"[object Generator]\";\n    };\n\n    function pushTryEntry(locs) {\n      var entry = {\n        tryLoc: locs[0]\n      };\n\n      if (1 in locs) {\n        entry.catchLoc = locs[1];\n      }\n\n      if (2 in locs) {\n        entry.finallyLoc = locs[2];\n        entry.afterLoc = locs[3];\n      }\n\n      this.tryEntries.push(entry);\n    }\n\n    function resetTryEntry(entry) {\n      var record = entry.completion || {};\n      record.type = \"normal\";\n      delete record.arg;\n      entry.completion = record;\n    }\n\n    function Context(tryLocsList) {\n      // The root entry object (effectively a try statement without a catch\n      // or a finally block) gives us a place to store values thrown from\n      // locations where there is no enclosing try statement.\n      this.tryEntries = [{\n        tryLoc: \"root\"\n      }];\n      tryLocsList.forEach(pushTryEntry, this);\n      this.reset(true);\n    }\n\n    exports.keys = function (object) {\n      var keys = [];\n\n      for (var key in object) {\n        keys.push(key);\n      }\n\n      keys.reverse(); // Rather than returning an object with a next method, we keep\n      // things simple and return the next function itself.\n\n      return function next() {\n        while (keys.length) {\n          var key = keys.pop();\n\n          if (key in object) {\n            next.value = key;\n            next.done = false;\n            return next;\n          }\n        } // To avoid creating an additional object, we just hang the .value\n        // and .done properties off the next function object itself. This\n        // also ensures that the minifier will not anonymize the function.\n\n\n        next.done = true;\n        return next;\n      };\n    };\n\n    function values(iterable) {\n      if (iterable) {\n        var iteratorMethod = iterable[iteratorSymbol];\n\n        if (iteratorMethod) {\n          return iteratorMethod.call(iterable);\n        }\n\n        if (typeof iterable.next === \"function\") {\n          return iterable;\n        }\n\n        if (!isNaN(iterable.length)) {\n          var i = -1,\n              next = function next() {\n            while (++i < iterable.length) {\n              if (hasOwn.call(iterable, i)) {\n                next.value = iterable[i];\n                next.done = false;\n                return next;\n              }\n            }\n\n            next.value = undefined$1;\n            next.done = true;\n            return next;\n          };\n\n          return next.next = next;\n        }\n      } // Return an iterator with no values.\n\n\n      return {\n        next: doneResult\n      };\n    }\n\n    exports.values = values;\n\n    function doneResult() {\n      return {\n        value: undefined$1,\n        done: true\n      };\n    }\n\n    Context.prototype = {\n      constructor: Context,\n      reset: function reset(skipTempReset) {\n        this.prev = 0;\n        this.next = 0; // Resetting context._sent for legacy support of Babel's\n        // function.sent implementation.\n\n        this.sent = this._sent = undefined$1;\n        this.done = false;\n        this.delegate = null;\n        this.method = \"next\";\n        this.arg = undefined$1;\n        this.tryEntries.forEach(resetTryEntry);\n\n        if (!skipTempReset) {\n          for (var name in this) {\n            // Not sure about the optimal order of these conditions:\n            if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n              this[name] = undefined$1;\n            }\n          }\n        }\n      },\n      stop: function stop() {\n        this.done = true;\n        var rootEntry = this.tryEntries[0];\n        var rootRecord = rootEntry.completion;\n\n        if (rootRecord.type === \"throw\") {\n          throw rootRecord.arg;\n        }\n\n        return this.rval;\n      },\n      dispatchException: function dispatchException(exception) {\n        if (this.done) {\n          throw exception;\n        }\n\n        var context = this;\n\n        function handle(loc, caught) {\n          record.type = \"throw\";\n          record.arg = exception;\n          context.next = loc;\n\n          if (caught) {\n            // If the dispatched exception was caught by a catch block,\n            // then let that catch block handle the exception normally.\n            context.method = \"next\";\n            context.arg = undefined$1;\n          }\n\n          return !!caught;\n        }\n\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n          var record = entry.completion;\n\n          if (entry.tryLoc === \"root\") {\n            // Exception thrown outside of any try block that could handle\n            // it, so set the completion value of the entire function to\n            // throw the exception.\n            return handle(\"end\");\n          }\n\n          if (entry.tryLoc <= this.prev) {\n            var hasCatch = hasOwn.call(entry, \"catchLoc\");\n            var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n            if (hasCatch && hasFinally) {\n              if (this.prev < entry.catchLoc) {\n                return handle(entry.catchLoc, true);\n              } else if (this.prev < entry.finallyLoc) {\n                return handle(entry.finallyLoc);\n              }\n            } else if (hasCatch) {\n              if (this.prev < entry.catchLoc) {\n                return handle(entry.catchLoc, true);\n              }\n            } else if (hasFinally) {\n              if (this.prev < entry.finallyLoc) {\n                return handle(entry.finallyLoc);\n              }\n            } else {\n              throw new Error(\"try statement without catch or finally\");\n            }\n          }\n        }\n      },\n      abrupt: function abrupt(type, arg) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n\n          if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n            var finallyEntry = entry;\n            break;\n          }\n        }\n\n        if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n          // Ignore the finally entry if control is not jumping to a\n          // location outside the try/catch block.\n          finallyEntry = null;\n        }\n\n        var record = finallyEntry ? finallyEntry.completion : {};\n        record.type = type;\n        record.arg = arg;\n\n        if (finallyEntry) {\n          this.method = \"next\";\n          this.next = finallyEntry.finallyLoc;\n          return ContinueSentinel;\n        }\n\n        return this.complete(record);\n      },\n      complete: function complete(record, afterLoc) {\n        if (record.type === \"throw\") {\n          throw record.arg;\n        }\n\n        if (record.type === \"break\" || record.type === \"continue\") {\n          this.next = record.arg;\n        } else if (record.type === \"return\") {\n          this.rval = this.arg = record.arg;\n          this.method = \"return\";\n          this.next = \"end\";\n        } else if (record.type === \"normal\" && afterLoc) {\n          this.next = afterLoc;\n        }\n\n        return ContinueSentinel;\n      },\n      finish: function finish(finallyLoc) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n\n          if (entry.finallyLoc === finallyLoc) {\n            this.complete(entry.completion, entry.afterLoc);\n            resetTryEntry(entry);\n            return ContinueSentinel;\n          }\n        }\n      },\n      \"catch\": function _catch(tryLoc) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n\n          if (entry.tryLoc === tryLoc) {\n            var record = entry.completion;\n\n            if (record.type === \"throw\") {\n              var thrown = record.arg;\n              resetTryEntry(entry);\n            }\n\n            return thrown;\n          }\n        } // The context.catch method must only be called with a location\n        // argument that corresponds to a known catch block.\n\n\n        throw new Error(\"illegal catch attempt\");\n      },\n      delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n        this.delegate = {\n          iterator: values(iterable),\n          resultName: resultName,\n          nextLoc: nextLoc\n        };\n\n        if (this.method === \"next\") {\n          // Deliberately forget the last sent value so that we don't\n          // accidentally pass it on to the delegate.\n          this.arg = undefined$1;\n        }\n\n        return ContinueSentinel;\n      }\n    }; // Regardless of whether this script is executing as a CommonJS module\n    // or not, return the runtime object so that we can declare the variable\n    // regeneratorRuntime in the outer scope, which allows this module to be\n    // injected easily by `bin/regenerator --include-runtime script.js`.\n\n    return exports;\n  }( // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  module.exports);\n\n  try {\n    regeneratorRuntime = runtime;\n  } catch (accidentalStrictMode) {\n    // This module should not be running in strict mode, so the above\n    // assignment should always work unless something is misconfigured. Just\n    // in case runtime.js accidentally runs in strict mode, we can escape\n    // strict mode using a global Function call. This could conceivably fail\n    // if a Content Security Policy forbids using Function, but in that case\n    // the proper solution is to fix the accidental strict mode problem. If\n    // you've misconfigured your bundler to force strict mode and applied a\n    // CSP to forbid Function, and you're not willing to fix either of those\n    // problems, please detail your unique predicament in a GitHub issue.\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n});\n\nvar DoctypeProxy = /*#__PURE__*/function () {\n  function DoctypeProxy(getRemote) {\n    this._getPromise = null;\n    this._queue = [];\n    this._getRemote = getRemote;\n\n    this._createValuePromise();\n  }\n\n  var _proto = DoctypeProxy.prototype;\n\n  _proto._createValuePromise = function _createValuePromise() {\n    var _this = this;\n\n    this._promiseValue = new Promise(function (resolve, reject) {\n      _this._deferValue = {\n        resolve: resolve,\n        reject: reject\n      };\n    });\n  };\n\n  _proto.change = function change(mutation) {\n    var _this2 = this;\n\n    return new Promise(function (resolve, reject) {\n      var run = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(current) {\n          var next;\n          return runtime_1.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  _context.next = 3;\n                  return mutation(current);\n\n                case 3:\n                  next = _context.sent;\n                  resolve();\n\n                  _this2._next(next);\n\n                  _context.next = 12;\n                  break;\n\n                case 8:\n                  _context.prev = 8;\n                  _context.t0 = _context[\"catch\"](0);\n                  reject(_context.t0);\n\n                  _this2._next(current);\n\n                case 12:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[0, 8]]);\n        }));\n\n        return function run(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n\n      _this2._queue.push({\n        reject: reject,\n        run: run\n      });\n\n      if (_this2._queue.length === 1) {\n        void _this2._start();\n      }\n    });\n  };\n\n  _proto.changeContent = /*#__PURE__*/function () {\n    var _changeContent = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee3(change) {\n      var mutation;\n      return runtime_1.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              mutation = /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee2(doc) {\n                  return runtime_1.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          _context2.next = 2;\n                          return doc.update(change(doc.content), doc.metadata);\n\n                        case 2:\n                          return _context2.abrupt(\"return\", doc);\n\n                        case 3:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }));\n\n                return function mutation(_x3) {\n                  return _ref2.apply(this, arguments);\n                };\n              }();\n\n              _context3.next = 3;\n              return this.change(mutation);\n\n            case 3:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function changeContent(_x2) {\n      return _changeContent.apply(this, arguments);\n    }\n\n    return changeContent;\n  }();\n\n  _proto.get = /*#__PURE__*/function () {\n    var _get = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee4() {\n      return runtime_1.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!(this._queue.length === 0)) {\n                _context4.next = 6;\n                break;\n              }\n\n              _context4.next = 3;\n              return this._getRemote();\n\n            case 3:\n              _context4.t0 = _context4.sent;\n              _context4.next = 9;\n              break;\n\n            case 6:\n              _context4.next = 8;\n              return this._promiseValue;\n\n            case 8:\n              _context4.t0 = _context4.sent;\n\n            case 9:\n              return _context4.abrupt(\"return\", _context4.t0);\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    function get() {\n      return _get.apply(this, arguments);\n    }\n\n    return get;\n  }();\n\n  _proto._start = /*#__PURE__*/function () {\n    var _start2 = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee5() {\n      var value;\n      return runtime_1.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return this._getRemote();\n\n            case 3:\n              value = _context5.sent;\n\n              this._next(value);\n\n              _context5.next = 13;\n              break;\n\n            case 7:\n              _context5.prev = 7;\n              _context5.t0 = _context5[\"catch\"](0);\n\n              this._queue.forEach(function (item) {\n                item.reject(_context5.t0);\n              });\n\n              this._queue = [];\n\n              this._deferValue.reject(_context5.t0);\n\n              this._createValuePromise();\n\n            case 13:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this, [[0, 7]]);\n    }));\n\n    function _start() {\n      return _start2.apply(this, arguments);\n    }\n\n    return _start;\n  }();\n\n  _proto._next = function _next(value) {\n    var item = this._queue.shift();\n\n    if (item == null) {\n      this._end(value);\n    } else {\n      void item.run(value);\n    }\n  };\n\n  _proto._end = function _end(value) {\n    this._deferValue.resolve(value);\n\n    this._createValuePromise();\n  };\n\n  return DoctypeProxy;\n}();\n\nfunction isCaip10(account) {\n  try {\n    AccountID.parse(account);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar didRegex = /^did:([A-Za-z0-9]+):([A-Za-z0-9.\\-:_]+)$/;\n\nfunction isDid(did) {\n  return didRegex.test(did);\n}\n\nfunction assertDid(did) {\n  if (!isDid(did)) {\n    throw new Error(\"Invalid DID: \" + did);\n  }\n}\n\nfunction loadLegacy3BoxProfile(_x) {\n  return _loadLegacy3BoxProfile.apply(this, arguments);\n} // Validation for BasicProfile\n\n\nfunction _loadLegacy3BoxProfile() {\n  _loadLegacy3BoxProfile = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(address) {\n    var res;\n    return runtime_1.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch(\"https://ipfs.3box.io/profile?address=\" + address);\n\n          case 3:\n            res = _context.sent;\n\n            if (!res.ok) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 7;\n            return res.json();\n\n          case 7:\n            _context.t0 = _context.sent;\n            _context.next = 11;\n            break;\n\n          case 10:\n            _context.t0 = null;\n\n          case 11:\n            return _context.abrupt(\"return\", _context.t0);\n\n          case 14:\n            _context.prev = 14;\n            _context.t1 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", null);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 14]]);\n  }));\n  return _loadLegacy3BoxProfile.apply(this, arguments);\n}\n\nvar lengthIndex = {\n  name: 150,\n  description: 420,\n  location: 140,\n  website: 240,\n  emoji: 2,\n  employer: 140,\n  school: 140\n};\n\nvar isStrAndLen = function isStrAndLen(obj, key) {\n  if (!lengthIndex[key]) return false;\n  return typeof obj[key] === 'string' && obj[key].length <= lengthIndex[key];\n};\n\nvar transformProfile = function transformProfile(profile) {\n  var _profile$image$;\n\n  var transform = {};\n  var image, background;\n  if (isStrAndLen(profile, 'name')) transform.name = profile.name;\n  if (isStrAndLen(profile, 'description')) transform.description = profile.description;\n  if (isStrAndLen(profile, 'location')) transform.homeLocation = profile.location;\n  if (isStrAndLen(profile, 'website')) transform.url = profile.website;\n  if (isStrAndLen(profile, 'emoji')) transform.emoji = profile.emoji;\n  if (isStrAndLen(profile, 'employer')) transform.affiliations = [profile.employer];\n\n  if (isStrAndLen(profile, 'school')) {\n    transform.affiliations = (transform.affiliations || []).concat([profile.school]);\n  } // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n\n  if (Array.isArray(profile.image)) image = (_profile$image$ = profile.image[0]) == null ? void 0 : _profile$image$.contentUrl['/'];\n\n  if (image != null && typeof image === 'string') {\n    transform.image = {\n      original: {\n        src: \"ipfs://\" + image,\n        mimeType: 'application/octet-stream',\n        width: 170,\n        height: 170\n      }\n    };\n  }\n\n  if (Array.isArray(profile.coverPhoto)) {\n    var _profile$coverPhoto$; // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n\n    background = (_profile$coverPhoto$ = profile.coverPhoto[0]) == null ? void 0 : _profile$coverPhoto$.contentUrl['/'];\n  }\n\n  if (background != null && typeof background === 'string') {\n    transform.background = {\n      original: {\n        src: \"ipfs://\" + background,\n        mimeType: 'application/octet-stream',\n        width: 1000,\n        height: 175\n      }\n    };\n  }\n\n  return transform;\n};\n\nfunction getLegacy3BoxProfileAsBasicProfile(_x2) {\n  return _getLegacy3BoxProfileAsBasicProfile.apply(this, arguments);\n}\n\nfunction _getLegacy3BoxProfileAsBasicProfile() {\n  _getLegacy3BoxProfileAsBasicProfile = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee2(address) {\n    var profile;\n    return runtime_1.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return loadLegacy3BoxProfile(address);\n\n          case 2:\n            profile = _context2.sent;\n            return _context2.abrupt(\"return\", profile ? transformProfile(profile) : null);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getLegacy3BoxProfileAsBasicProfile.apply(this, arguments);\n}\n\nvar IDX = /*#__PURE__*/function () {\n  function IDX(_ref) {\n    var _ref$aliases = _ref.aliases,\n        aliases = _ref$aliases === void 0 ? {} : _ref$aliases,\n        autopin = _ref.autopin,\n        ceramic = _ref.ceramic;\n    this._aliases = _extends({}, definitions, aliases);\n    this._autopin = autopin !== false;\n    this._ceramic = ceramic;\n    this._indexProxy = new DoctypeProxy(this._getOwnIDXDoc.bind(this));\n  }\n\n  var _proto = IDX.prototype; // High-level APIs\n\n  _proto.has = /*#__PURE__*/function () {\n    var _has = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(name, did) {\n      var key, ref;\n      return runtime_1.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              key = this._toIndexKey(name);\n              _context.next = 3;\n              return this._getReference(key, did);\n\n            case 3:\n              ref = _context.sent;\n              return _context.abrupt(\"return\", ref != null);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function has(_x, _x2) {\n      return _has.apply(this, arguments);\n    }\n\n    return has;\n  }();\n\n  _proto.get = /*#__PURE__*/function () {\n    var _get = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee2(name, did) {\n      var key;\n      return runtime_1.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              key = this._toIndexKey(name);\n              _context2.next = 3;\n              return this._getRecord(key, did);\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function get(_x3, _x4) {\n      return _get.apply(this, arguments);\n    }\n\n    return get;\n  }();\n\n  _proto.set = /*#__PURE__*/function () {\n    var _set = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee3(name, content, options) {\n      var key;\n      return runtime_1.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              key = this._toIndexKey(name);\n              _context3.next = 3;\n              return this._setRecord(key, content, options);\n\n            case 3:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function set(_x5, _x6, _x7) {\n      return _set.apply(this, arguments);\n    }\n\n    return set;\n  }();\n\n  _proto.merge = /*#__PURE__*/function () {\n    var _merge = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee4(name, content, options) {\n      var key, existing, newContent;\n      return runtime_1.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              key = this._toIndexKey(name);\n              _context4.next = 3;\n              return this._getRecord(key);\n\n            case 3:\n              existing = _context4.sent;\n              newContent = existing ? _extends({}, existing, content) : content;\n              _context4.next = 7;\n              return this._setRecord(key, newContent, options);\n\n            case 7:\n              return _context4.abrupt(\"return\", _context4.sent);\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    function merge(_x8, _x9, _x10) {\n      return _merge.apply(this, arguments);\n    }\n\n    return merge;\n  }();\n\n  _proto.setAll = /*#__PURE__*/function () {\n    var _setAll = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee6(contents, options) {\n      var _this = this;\n\n      var updates, changes, newReferences;\n      return runtime_1.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              updates = Object.entries(contents).map( /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee5(_ref2) {\n                  var name, content, key, _yield$_this$_setReco, created, id;\n\n                  return runtime_1.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          name = _ref2[0], content = _ref2[1];\n                          key = _this._toIndexKey(name);\n                          _context5.next = 4;\n                          return _this._setRecordOnly(key, content, options);\n\n                        case 4:\n                          _yield$_this$_setReco = _context5.sent;\n                          created = _yield$_this$_setReco[0];\n                          id = _yield$_this$_setReco[1];\n                          return _context5.abrupt(\"return\", [created, key, id]);\n\n                        case 8:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5);\n                }));\n\n                return function (_x13) {\n                  return _ref3.apply(this, arguments);\n                };\n              }());\n              _context6.next = 3;\n              return Promise.all(updates);\n\n            case 3:\n              changes = _context6.sent;\n              newReferences = changes.reduce(function (acc, _ref4) {\n                var created = _ref4[0],\n                    key = _ref4[1],\n                    id = _ref4[2];\n\n                if (created) {\n                  acc[key] = id.toUrl();\n                }\n\n                return acc;\n              }, {});\n              _context6.next = 7;\n              return this._setReferences(newReferences);\n\n            case 7:\n              return _context6.abrupt(\"return\", newReferences);\n\n            case 8:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, this);\n    }));\n\n    function setAll(_x11, _x12) {\n      return _setAll.apply(this, arguments);\n    }\n\n    return setAll;\n  }();\n\n  _proto.setDefaults = /*#__PURE__*/function () {\n    var _setDefaults = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee8(contents, options) {\n      var _yield$this$getIndex,\n          _this2 = this;\n\n      var index, updates, changes, newReferences;\n      return runtime_1.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return this.getIndex();\n\n            case 2:\n              _context8.t0 = _yield$this$getIndex = _context8.sent;\n\n              if (!(_context8.t0 != null)) {\n                _context8.next = 7;\n                break;\n              }\n\n              _context8.t1 = _yield$this$getIndex;\n              _context8.next = 8;\n              break;\n\n            case 7:\n              _context8.t1 = {};\n\n            case 8:\n              index = _context8.t1;\n              updates = Object.entries(contents).map(function (_ref5) {\n                var name = _ref5[0],\n                    content = _ref5[1];\n                return [_this2._toIndexKey(name), content];\n              }) // This filter returned the type (string | Record<string, any>)[][]\n              // we need to add a type guard to get the correct type here.\n              .filter(function (entry) {\n                return index[entry[0]] == null;\n              }).map( /*#__PURE__*/function () {\n                var _ref7 = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee7(_ref6) {\n                  var _ref8;\n\n                  var key, content, definition, id;\n                  return runtime_1.wrap(function _callee7$(_context7) {\n                    while (1) {\n                      switch (_context7.prev = _context7.next) {\n                        case 0:\n                          key = _ref6[0], content = _ref6[1];\n                          _context7.next = 3;\n                          return _this2.getDefinition(key);\n\n                        case 3:\n                          definition = _context7.sent;\n                          _context7.next = 6;\n                          return _this2._createRecord(definition, content, options);\n\n                        case 6:\n                          id = _context7.sent;\n                          return _context7.abrupt(\"return\", (_ref8 = {}, _ref8[key] = id.toUrl(), _ref8));\n\n                        case 8:\n                        case \"end\":\n                          return _context7.stop();\n                      }\n                    }\n                  }, _callee7);\n                }));\n\n                return function (_x16) {\n                  return _ref7.apply(this, arguments);\n                };\n              }());\n              _context8.next = 12;\n              return Promise.all(updates);\n\n            case 12:\n              changes = _context8.sent;\n              newReferences = changes.reduce(function (acc, keyToID) {\n                return Object.assign(acc, keyToID);\n              }, {});\n              _context8.next = 16;\n              return this._setReferences(newReferences);\n\n            case 16:\n              return _context8.abrupt(\"return\", newReferences);\n\n            case 17:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, this);\n    }));\n\n    function setDefaults(_x14, _x15) {\n      return _setDefaults.apply(this, arguments);\n    }\n\n    return setDefaults;\n  }();\n\n  _proto.remove = /*#__PURE__*/function () {\n    var _remove = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee9(name) {\n      var key;\n      return runtime_1.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              key = this._toIndexKey(name);\n              _context9.next = 3;\n              return this._removeReference(key);\n\n            case 3:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, this);\n    }));\n\n    function remove(_x17) {\n      return _remove.apply(this, arguments);\n    }\n\n    return remove;\n  }();\n\n  _proto._toIndexKey = function _toIndexKey(name) {\n    var _this$_aliases$name;\n\n    return (_this$_aliases$name = this._aliases[name]) != null ? _this$_aliases$name : name;\n  } // Identity Index APIs\n  ;\n\n  _proto.getIndex = /*#__PURE__*/function () {\n    var _getIndex = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee10(did) {\n      var rootDoc;\n      return runtime_1.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              if (!(this.authenticated && (did === this.id || did == null))) {\n                _context10.next = 6;\n                break;\n              }\n\n              _context10.next = 3;\n              return this._indexProxy.get();\n\n            case 3:\n              _context10.t0 = _context10.sent;\n              _context10.next = 9;\n              break;\n\n            case 6:\n              _context10.next = 8;\n              return this._getIDXDoc(did != null ? did : this.id);\n\n            case 8:\n              _context10.t0 = _context10.sent;\n\n            case 9:\n              rootDoc = _context10.t0;\n              return _context10.abrupt(\"return\", rootDoc ? rootDoc.content : null);\n\n            case 11:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, this);\n    }));\n\n    function getIndex(_x18) {\n      return _getIndex.apply(this, arguments);\n    }\n\n    return getIndex;\n  }();\n\n  _proto.iterator = function iterator(did) {\n    var _this3 = this,\n        _ref9;\n\n    var list;\n    var cursor = 0;\n    return _ref9 = {}, _ref9[Symbol.asyncIterator] = function () {\n      return this;\n    }, _ref9.next = function () {\n      var _next = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee11() {\n        var index, _list$cursor, key, id, doc;\n\n        return runtime_1.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                if (!(list == null)) {\n                  _context11.next = 5;\n                  break;\n                }\n\n                _context11.next = 3;\n                return _this3.getIndex(did);\n\n              case 3:\n                index = _context11.sent;\n                list = Object.entries(index != null ? index : {});\n\n              case 5:\n                if (!(cursor === list.length)) {\n                  _context11.next = 7;\n                  break;\n                }\n\n                return _context11.abrupt(\"return\", {\n                  done: true,\n                  value: null\n                });\n\n              case 7:\n                _list$cursor = list[cursor++], key = _list$cursor[0], id = _list$cursor[1];\n                _context11.next = 10;\n                return _this3._loadDocument(id);\n\n              case 10:\n                doc = _context11.sent;\n                return _context11.abrupt(\"return\", {\n                  done: false,\n                  value: {\n                    key: key,\n                    id: id,\n                    record: doc.content\n                  }\n                });\n\n              case 12:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }));\n\n      function next() {\n        return _next.apply(this, arguments);\n      }\n\n      return next;\n    }(), _ref9;\n  };\n\n  _proto._createIDXDoc = /*#__PURE__*/function () {\n    var _createIDXDoc2 = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee12(did) {\n      return runtime_1.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              if (!isCaip10(did)) {\n                _context12.next = 4;\n                break;\n              }\n\n              _context12.next = 3;\n              return this.caip10ToDid(did);\n\n            case 3:\n              did = _context12.sent;\n\n            case 4:\n              assertDid(did);\n              _context12.next = 7;\n              return TileDocument.create(this._ceramic, null, {\n                deterministic: true,\n                controllers: [did],\n                family: 'IDX'\n              }, {\n                anchor: false,\n                publish: false\n              });\n\n            case 7:\n              return _context12.abrupt(\"return\", _context12.sent);\n\n            case 8:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12, this);\n    }));\n\n    function _createIDXDoc(_x19) {\n      return _createIDXDoc2.apply(this, arguments);\n    }\n\n    return _createIDXDoc;\n  }();\n\n  _proto._getIDXDoc = /*#__PURE__*/function () {\n    var _getIDXDoc2 = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee13(did) {\n      var doc;\n      return runtime_1.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.next = 2;\n              return this._createIDXDoc(did);\n\n            case 2:\n              doc = _context13.sent;\n\n              if (!(doc.metadata.schema == null)) {\n                _context13.next = 5;\n                break;\n              }\n\n              return _context13.abrupt(\"return\", null);\n\n            case 5:\n              if (!(doc.metadata.schema !== schemas.IdentityIndex)) {\n                _context13.next = 7;\n                break;\n              }\n\n              throw new Error('Invalid document: schema is not IdentityIndex');\n\n            case 7:\n              return _context13.abrupt(\"return\", doc);\n\n            case 8:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13, this);\n    }));\n\n    function _getIDXDoc(_x20) {\n      return _getIDXDoc2.apply(this, arguments);\n    }\n\n    return _getIDXDoc;\n  }();\n\n  _proto._getOwnIDXDoc = /*#__PURE__*/function () {\n    var _getOwnIDXDoc2 = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee14() {\n      var doc;\n      return runtime_1.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              _context14.next = 2;\n              return this._createIDXDoc(this.id);\n\n            case 2:\n              doc = _context14.sent;\n\n              if (!(doc.metadata.schema == null)) {\n                _context14.next = 11;\n                break;\n              }\n\n              _context14.next = 6;\n              return doc.update(null, _extends({}, doc.metadata, {\n                schema: schemas.IdentityIndex\n              }));\n\n            case 6:\n              if (!this._autopin) {\n                _context14.next = 9;\n                break;\n              }\n\n              _context14.next = 9;\n              return this._ceramic.pin.add(doc.id);\n\n            case 9:\n              _context14.next = 13;\n              break;\n\n            case 11:\n              if (!(doc.metadata.schema !== schemas.IdentityIndex)) {\n                _context14.next = 13;\n                break;\n              }\n\n              throw new Error('Invalid document: schema is not IdentityIndex');\n\n            case 13:\n              return _context14.abrupt(\"return\", doc);\n\n            case 14:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14, this);\n    }));\n\n    function _getOwnIDXDoc() {\n      return _getOwnIDXDoc2.apply(this, arguments);\n    }\n\n    return _getOwnIDXDoc;\n  }() // Definition APIs\n  ;\n\n  _proto.getDefinition = /*#__PURE__*/function () {\n    var _getDefinition = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee15(idOrKey) {\n      var doc;\n      return runtime_1.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              _context15.next = 2;\n              return this._loadDocument(idOrKey);\n\n            case 2:\n              doc = _context15.sent;\n\n              if (!(doc.metadata.schema !== schemas.Definition)) {\n                _context15.next = 5;\n                break;\n              }\n\n              throw new Error('Invalid document: schema is not Definition');\n\n            case 5:\n              return _context15.abrupt(\"return\", _extends({}, doc.content, {\n                id: doc.id\n              }));\n\n            case 6:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15, this);\n    }));\n\n    function getDefinition(_x21) {\n      return _getDefinition.apply(this, arguments);\n    }\n\n    return getDefinition;\n  }() // Record APIs\n  ;\n\n  _proto.getRecordID = /*#__PURE__*/function () {\n    var _getRecordID = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee16(key, did) {\n      return runtime_1.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.next = 2;\n              return this._getReference(key, did);\n\n            case 2:\n              return _context16.abrupt(\"return\", _context16.sent);\n\n            case 3:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16, this);\n    }));\n\n    function getRecordID(_x22, _x23) {\n      return _getRecordID.apply(this, arguments);\n    }\n\n    return getRecordID;\n  }();\n\n  _proto.getRecordDocument = /*#__PURE__*/function () {\n    var _getRecordDocument = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee17(key, did) {\n      var _yield$this$_loadDocu;\n\n      var id;\n      return runtime_1.wrap(function _callee17$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              _context17.next = 2;\n              return this.getRecordID(key, did);\n\n            case 2:\n              id = _context17.sent;\n\n              if (!(id == null)) {\n                _context17.next = 5;\n                break;\n              }\n\n              return _context17.abrupt(\"return\", null);\n\n            case 5:\n              _context17.next = 7;\n              return this._loadDocument(id);\n\n            case 7:\n              _context17.t0 = _yield$this$_loadDocu = _context17.sent;\n\n              if (!(_context17.t0 != null)) {\n                _context17.next = 12;\n                break;\n              }\n\n              _context17.t1 = _yield$this$_loadDocu;\n              _context17.next = 13;\n              break;\n\n            case 12:\n              _context17.t1 = null;\n\n            case 13:\n              return _context17.abrupt(\"return\", _context17.t1);\n\n            case 14:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, _callee17, this);\n    }));\n\n    function getRecordDocument(_x24, _x25) {\n      return _getRecordDocument.apply(this, arguments);\n    }\n\n    return getRecordDocument;\n  }();\n\n  _proto._getRecord = /*#__PURE__*/function () {\n    var _getRecord2 = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee18(key, did) {\n      var doc;\n      return runtime_1.wrap(function _callee18$(_context18) {\n        while (1) {\n          switch (_context18.prev = _context18.next) {\n            case 0:\n              _context18.next = 2;\n              return this.getRecordDocument(key, did);\n\n            case 2:\n              doc = _context18.sent;\n              return _context18.abrupt(\"return\", doc ? doc.content : null);\n\n            case 4:\n            case \"end\":\n              return _context18.stop();\n          }\n        }\n      }, _callee18, this);\n    }));\n\n    function _getRecord(_x26, _x27) {\n      return _getRecord2.apply(this, arguments);\n    }\n\n    return _getRecord;\n  }();\n\n  _proto._setRecord = /*#__PURE__*/function () {\n    var _setRecord2 = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee19(key, content, options) {\n      var _yield$this$_setRecor, created, id;\n\n      return runtime_1.wrap(function _callee19$(_context19) {\n        while (1) {\n          switch (_context19.prev = _context19.next) {\n            case 0:\n              _context19.next = 2;\n              return this._setRecordOnly(key, content, options);\n\n            case 2:\n              _yield$this$_setRecor = _context19.sent;\n              created = _yield$this$_setRecor[0];\n              id = _yield$this$_setRecor[1];\n\n              if (!created) {\n                _context19.next = 8;\n                break;\n              }\n\n              _context19.next = 8;\n              return this._setReference(key, id);\n\n            case 8:\n              return _context19.abrupt(\"return\", id);\n\n            case 9:\n            case \"end\":\n              return _context19.stop();\n          }\n        }\n      }, _callee19, this);\n    }));\n\n    function _setRecord(_x28, _x29, _x30) {\n      return _setRecord2.apply(this, arguments);\n    }\n\n    return _setRecord;\n  }();\n\n  _proto._setRecordOnly = /*#__PURE__*/function () {\n    var _setRecordOnly2 = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee20(key, content, _temp) {\n      var _ref10, pin, existing, definition, ref, doc;\n\n      return runtime_1.wrap(function _callee20$(_context20) {\n        while (1) {\n          switch (_context20.prev = _context20.next) {\n            case 0:\n              _ref10 = _temp === void 0 ? {} : _temp, pin = _ref10.pin;\n              _context20.next = 3;\n              return this._getReference(key, this.id);\n\n            case 3:\n              existing = _context20.sent;\n\n              if (!(existing == null)) {\n                _context20.next = 14;\n                break;\n              }\n\n              _context20.next = 7;\n              return this.getDefinition(key);\n\n            case 7:\n              definition = _context20.sent;\n              _context20.next = 10;\n              return this._createRecord(definition, content, {\n                pin: pin\n              });\n\n            case 10:\n              ref = _context20.sent;\n              return _context20.abrupt(\"return\", [true, ref]);\n\n            case 14:\n              _context20.next = 16;\n              return this._loadDocument(existing);\n\n            case 16:\n              doc = _context20.sent;\n              _context20.next = 19;\n              return doc.update(content);\n\n            case 19:\n              return _context20.abrupt(\"return\", [false, doc.id]);\n\n            case 20:\n            case \"end\":\n              return _context20.stop();\n          }\n        }\n      }, _callee20, this);\n    }));\n\n    function _setRecordOnly(_x31, _x32, _x33) {\n      return _setRecordOnly2.apply(this, arguments);\n    }\n\n    return _setRecordOnly;\n  }();\n\n  _proto._loadDocument = function _loadDocument(id) {\n    return this._ceramic.loadStream(id);\n  };\n\n  _proto._createRecord = /*#__PURE__*/function () {\n    var _createRecord2 = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee21(definition, content, _temp2) {\n      var _ref11, pin, metadata, doc, updated;\n\n      return runtime_1.wrap(function _callee21$(_context21) {\n        while (1) {\n          switch (_context21.prev = _context21.next) {\n            case 0:\n              _ref11 = _temp2 === void 0 ? {} : _temp2, pin = _ref11.pin;\n              metadata = {\n                deterministic: true,\n                controllers: [this.id],\n                family: definition.id.toString()\n              }; // Doc must first be created in a deterministic way\n\n              _context21.next = 4;\n              return TileDocument.create(this._ceramic, null, metadata, {\n                anchor: false,\n                publish: false\n              });\n\n            case 4:\n              doc = _context21.sent; // Then be updated with content and schema\n\n              updated = doc.update(content, _extends({}, metadata, {\n                schema: definition.schema\n              }));\n\n              if (!(pin != null ? pin : this._autopin)) {\n                _context21.next = 11;\n                break;\n              }\n\n              _context21.next = 9;\n              return Promise.all([updated, this._ceramic.pin.add(doc.id)]);\n\n            case 9:\n              _context21.next = 13;\n              break;\n\n            case 11:\n              _context21.next = 13;\n              return updated;\n\n            case 13:\n              return _context21.abrupt(\"return\", doc.id);\n\n            case 14:\n            case \"end\":\n              return _context21.stop();\n          }\n        }\n      }, _callee21, this);\n    }));\n\n    function _createRecord(_x34, _x35, _x36) {\n      return _createRecord2.apply(this, arguments);\n    }\n\n    return _createRecord;\n  }() // References APIs\n  ;\n\n  _proto._getReference = /*#__PURE__*/function () {\n    var _getReference2 = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee22(key, did) {\n      var _index$key;\n\n      var index;\n      return runtime_1.wrap(function _callee22$(_context22) {\n        while (1) {\n          switch (_context22.prev = _context22.next) {\n            case 0:\n              _context22.next = 2;\n              return this.getIndex(did != null ? did : this.id);\n\n            case 2:\n              index = _context22.sent;\n              return _context22.abrupt(\"return\", (_index$key = index == null ? void 0 : index[key]) != null ? _index$key : null);\n\n            case 4:\n            case \"end\":\n              return _context22.stop();\n          }\n        }\n      }, _callee22, this);\n    }));\n\n    function _getReference(_x37, _x38) {\n      return _getReference2.apply(this, arguments);\n    }\n\n    return _getReference;\n  }();\n\n  _proto._setReference = /*#__PURE__*/function () {\n    var _setReference2 = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee23(key, id) {\n      return runtime_1.wrap(function _callee23$(_context23) {\n        while (1) {\n          switch (_context23.prev = _context23.next) {\n            case 0:\n              _context23.next = 2;\n              return this._indexProxy.changeContent(function (index) {\n                var _extends2;\n\n                return _extends({}, index, (_extends2 = {}, _extends2[key] = id.toUrl(), _extends2));\n              });\n\n            case 2:\n            case \"end\":\n              return _context23.stop();\n          }\n        }\n      }, _callee23, this);\n    }));\n\n    function _setReference(_x39, _x40) {\n      return _setReference2.apply(this, arguments);\n    }\n\n    return _setReference;\n  }();\n\n  _proto._setReferences = /*#__PURE__*/function () {\n    var _setReferences2 = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee24(references) {\n      return runtime_1.wrap(function _callee24$(_context24) {\n        while (1) {\n          switch (_context24.prev = _context24.next) {\n            case 0:\n              if (!(Object.keys(references).length !== 0)) {\n                _context24.next = 3;\n                break;\n              }\n\n              _context24.next = 3;\n              return this._indexProxy.changeContent(function (index) {\n                return _extends({}, index, references);\n              });\n\n            case 3:\n            case \"end\":\n              return _context24.stop();\n          }\n        }\n      }, _callee24, this);\n    }));\n\n    function _setReferences(_x41) {\n      return _setReferences2.apply(this, arguments);\n    }\n\n    return _setReferences;\n  }();\n\n  _proto._removeReference = /*#__PURE__*/function () {\n    var _removeReference2 = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee25(key) {\n      return runtime_1.wrap(function _callee25$(_context25) {\n        while (1) {\n          switch (_context25.prev = _context25.next) {\n            case 0:\n              _context25.next = 2;\n              return this._indexProxy.changeContent(function (index) {\n                if (index) delete index[key];\n                return index;\n              });\n\n            case 2:\n            case \"end\":\n              return _context25.stop();\n          }\n        }\n      }, _callee25, this);\n    }));\n\n    function _removeReference(_x42) {\n      return _removeReference2.apply(this, arguments);\n    }\n\n    return _removeReference;\n  }();\n\n  _proto.caip10ToDid = /*#__PURE__*/function () {\n    var _caip10ToDid = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee26(accountId) {\n      var link;\n      return runtime_1.wrap(function _callee26$(_context26) {\n        while (1) {\n          switch (_context26.prev = _context26.next) {\n            case 0:\n              _context26.next = 2;\n              return Caip10Link.fromAccount(this._ceramic, accountId);\n\n            case 2:\n              link = _context26.sent;\n\n              if (!(link.did == null)) {\n                _context26.next = 5;\n                break;\n              }\n\n              throw new Error(\"No DID found for \" + accountId);\n\n            case 5:\n              return _context26.abrupt(\"return\", link.did);\n\n            case 6:\n            case \"end\":\n              return _context26.stop();\n          }\n        }\n      }, _callee26, this);\n    }));\n\n    function caip10ToDid(_x43) {\n      return _caip10ToDid.apply(this, arguments);\n    }\n\n    return caip10ToDid;\n  }();\n\n  _createClass(IDX, [{\n    key: \"authenticated\",\n    get: function get() {\n      return this._ceramic.did != null;\n    }\n  }, {\n    key: \"ceramic\",\n    get: function get() {\n      return this._ceramic;\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      if (this._ceramic.did == null) {\n        throw new Error('Ceramic instance is not authenticated');\n      }\n\n      return this._ceramic.did.id;\n    }\n  }]);\n\n  return IDX;\n}();\n\nexport { IDX, assertDid, getLegacy3BoxProfileAsBasicProfile, isCaip10, isDid };","map":{"version":3,"sources":["../../../node_modules/regenerator-runtime/runtime.js","../src/doctypes.ts","../src/utils.ts","../src/3box.ts","../src/index.ts"],"names":["runtime","Op","Object","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","toStringTagSymbol","value","enumerable","configurable","writable","obj","define","protoGenerator","outerFn","generator","context","tryLocsList","makeInvokeMethod","exports","type","arg","fn","err","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","ctor","genFun","__await","record","tryCatch","reject","result","invoke","resolve","previousPromise","callInvokeWithMethodAndArg","defineIteratorMethods","AsyncIterator","PromiseImpl","iter","wrap","state","method","doneResult","delegate","delegateResult","maybeInvokeDelegate","done","info","entry","tryLoc","locs","keys","key","next","iteratorMethod","iterable","isNaN","i","Context","constructor","reset","name","stop","rootEntry","rootRecord","dispatchException","handle","hasCatch","hasFinally","abrupt","finallyEntry","complete","finish","resetTryEntry","thrown","delegateYield","iterator","resultName","nextLoc","module","regeneratorRuntime","Function","DoctypeProxy","_createValuePromise","change","run","mutation","doc","item","_next","_end","isCaip10","account","AccountID","didRegex","isDid","did","assertDid","res","fetch","lengthIndex","description","location","website","emoji","employer","school","isStrAndLen","transformProfile","transform","profile","Array","image","original","src","mimeType","width","height","background","loadLegacy3BoxProfile","IDX","aliases","autopin","ceramic","ref","existing","newContent","updates","content","created","id","changes","Promise","newReferences","acc","index","definition","_toIndexKey","rootDoc","cursor","Symbol","list","deterministic","controllers","family","anchor","publish","schemas","schema","IdentityIndex","pin","_loadDocument","metadata","updated","link","Caip10Link"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import type { TileDocument } from '@ceramicnetwork/stream-tile'\n\nexport type TileContent = Record<string, any> | null\nexport type TileDoc = TileDocument<TileContent>\nexport type MutationFunc = (current: TileDoc) => Promise<TileDoc>\n\ntype RejectFunc = (error: Error) => void\n\ntype QueueItem<TileDoc> = {\n  reject: RejectFunc\n  run: (value: TileDoc) => Promise<void>\n}\n\nexport class DoctypeProxy {\n  _getRemote: () => Promise<TileDoc>\n  _getPromise: Promise<TileDoc> | null = null\n  _queue: Array<QueueItem<TileDoc>> = []\n  _promiseValue!: Promise<TileDoc>\n  _deferValue!: { resolve: (value: TileDoc) => any; reject: RejectFunc }\n\n  constructor(getRemote: () => Promise<TileDoc>) {\n    this._getRemote = getRemote\n    this._createValuePromise()\n  }\n\n  _createValuePromise(): void {\n    this._promiseValue = new Promise((resolve, reject) => {\n      this._deferValue = { resolve, reject }\n    })\n  }\n\n  change(mutation: MutationFunc): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const run = async (current: TileDoc): Promise<void> => {\n        try {\n          const next = await mutation(current)\n          resolve()\n          this._next(next)\n        } catch (err) {\n          reject(err)\n          this._next(current)\n        }\n      }\n\n      this._queue.push({ reject, run })\n      if (this._queue.length === 1) {\n        void this._start()\n      }\n    })\n  }\n\n  async changeContent(change: (content: TileContent) => TileContent): Promise<void> {\n    const mutation = async (doc: TileDoc): Promise<TileDoc> => {\n      await doc.update(change(doc.content), doc.metadata)\n      return doc\n    }\n    return await this.change(mutation)\n  }\n\n  async get(): Promise<TileDoc> {\n    return this._queue.length === 0 ? await this._getRemote() : await this._promiseValue\n  }\n\n  async _start(): Promise<void> {\n    try {\n      const value = await this._getRemote()\n      this._next(value)\n    } catch (err) {\n      this._queue.forEach((item) => {\n        item.reject(err)\n      })\n      this._queue = []\n      this._deferValue.reject(err)\n      this._createValuePromise()\n    }\n  }\n\n  _next(value: TileDoc): void {\n    const item = this._queue.shift()\n    if (item == null) {\n      this._end(value)\n    } else {\n      void item.run(value)\n    }\n  }\n\n  _end(value: TileDoc): void {\n    this._deferValue.resolve(value)\n    this._createValuePromise()\n  }\n}\n","import { AccountID } from 'caip'\n\nexport function isCaip10(account: string): boolean {\n  try {\n    AccountID.parse(account)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nconst didRegex = /^did:([A-Za-z0-9]+):([A-Za-z0-9.\\-:_]+)$/\nexport function isDid(did: string): boolean {\n  return didRegex.test(did)\n}\n\nexport function assertDid(did: string): void {\n  if (!isDid(did)) {\n    throw new Error(`Invalid DID: ${did}`)\n  }\n}\n","import type { BasicProfile } from '@ceramicstudio/idx-constants'\nimport fetch from 'cross-fetch'\n\nexport async function loadLegacy3BoxProfile<T = Record<string, any>>(\n  address: string\n): Promise<T | null> {\n  try {\n    const res = await fetch(`https://ipfs.3box.io/profile?address=${address}`)\n    return res.ok ? ((await res.json()) as T) : null\n  } catch (err) {\n    return null\n  }\n}\n\n// Validation for BasicProfile\nconst lengthIndex = <Record<string, number>>{\n  name: 150,\n  description: 420,\n  location: 140, //homeLocation\n  website: 240, // url\n  emoji: 2,\n  employer: 140, //affiliations\n  school: 140, //affiliations\n}\n\nconst isStrAndLen = (obj: Record<string, any>, key: string): boolean => {\n  if (!lengthIndex[key]) return false\n  return typeof obj[key] === 'string' && (obj[key] as string).length <= lengthIndex[key]\n}\n\nexport const transformProfile = (profile: Record<string, any>): BasicProfile => {\n  const transform = {} as BasicProfile\n  let image, background\n  if (isStrAndLen(profile, 'name')) transform.name = profile.name as string\n  if (isStrAndLen(profile, 'description')) transform.description = profile.description as string\n  if (isStrAndLen(profile, 'location')) transform.homeLocation = profile.location as string\n  if (isStrAndLen(profile, 'website')) transform.url = profile.website as string\n  if (isStrAndLen(profile, 'emoji')) transform.emoji = profile.emoji as string\n  if (isStrAndLen(profile, 'employer')) transform.affiliations = [profile.employer]\n  if (isStrAndLen(profile, 'school')) {\n    transform.affiliations = (transform.affiliations || []).concat([profile.school])\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (Array.isArray(profile.image)) image = profile.image[0]?.contentUrl['/'] as string\n  if (image != null && typeof image === 'string') {\n    transform.image = {\n      original: {\n        src: `ipfs://${image}`,\n        mimeType: 'application/octet-stream',\n        width: 170,\n        height: 170,\n      },\n    }\n  }\n  if (Array.isArray(profile.coverPhoto)) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    background = profile.coverPhoto[0]?.contentUrl['/'] as string\n  }\n  if (background != null && typeof background === 'string') {\n    transform.background = {\n      original: {\n        src: `ipfs://${background}`,\n        mimeType: 'application/octet-stream',\n        width: 1000,\n        height: 175,\n      },\n    }\n  }\n  return transform\n}\n\nexport async function getLegacy3BoxProfileAsBasicProfile(\n  address: string\n): Promise<BasicProfile | null> {\n  const profile = await loadLegacy3BoxProfile(address)\n  return profile ? transformProfile(profile) : null\n}\n","import type { CeramicApi } from '@ceramicnetwork/common'\nimport type StreamID from '@ceramicnetwork/streamid'\nimport { TileDocument } from '@ceramicnetwork/stream-tile'\nimport { Caip10Link } from '@ceramicnetwork/stream-caip10-link'\nimport { definitions, schemas } from '@ceramicstudio/idx-constants'\n\nimport { DoctypeProxy, TileDoc, TileContent } from './doctypes'\nimport type { Aliases, DefinitionWithID, Entry, Index, IndexKey } from './types'\nimport { isCaip10, assertDid } from './utils'\n\nexport { getLegacy3BoxProfileAsBasicProfile } from './3box'\nexport * from './types'\nexport * from './utils'\n\nexport interface CreateOptions {\n  pin?: boolean\n}\n\nexport interface IDXOptions {\n  aliases?: Aliases\n  autopin?: boolean\n  ceramic: CeramicApi\n}\n\nexport class IDX {\n  _aliases: Aliases\n  _autopin: boolean\n  _ceramic: CeramicApi\n  _indexProxy: DoctypeProxy\n\n  constructor({ aliases = {}, autopin, ceramic }: IDXOptions) {\n    this._aliases = { ...definitions, ...aliases }\n    this._autopin = autopin !== false\n    this._ceramic = ceramic\n    this._indexProxy = new DoctypeProxy(this._getOwnIDXDoc.bind(this))\n  }\n\n  get authenticated(): boolean {\n    return this._ceramic.did != null\n  }\n\n  get ceramic(): CeramicApi {\n    return this._ceramic\n  }\n\n  get id(): string {\n    if (this._ceramic.did == null) {\n      throw new Error('Ceramic instance is not authenticated')\n    }\n    return this._ceramic.did.id\n  }\n\n  // High-level APIs\n\n  async has(name: string, did?: string): Promise<boolean> {\n    const key = this._toIndexKey(name)\n    const ref = await this._getReference(key, did)\n    return ref != null\n  }\n\n  async get<T = unknown>(name: string, did?: string): Promise<T | null> {\n    const key = this._toIndexKey(name)\n    return await this._getRecord(key, did)\n  }\n\n  async set(\n    name: string,\n    content: Record<string, any>,\n    options?: CreateOptions\n  ): Promise<StreamID> {\n    const key = this._toIndexKey(name)\n    return await this._setRecord(key, content, options)\n  }\n\n  async merge<T extends Record<string, unknown> = Record<string, unknown>>(\n    name: string,\n    content: T,\n    options?: CreateOptions\n  ): Promise<StreamID> {\n    const key = this._toIndexKey(name)\n    const existing = await this._getRecord<T>(key)\n    const newContent = existing ? { ...existing, ...content } : content\n    return await this._setRecord(key, newContent, options)\n  }\n\n  async setAll(\n    contents: Record<string, Record<string, any>>,\n    options?: CreateOptions\n  ): Promise<Index> {\n    const updates = Object.entries(contents).map(async ([name, content]) => {\n      const key = this._toIndexKey(name)\n      const [created, id] = await this._setRecordOnly(key, content, options)\n      return [created, key, id]\n    }) as Array<Promise<[boolean, IndexKey, StreamID]>>\n    const changes = await Promise.all(updates)\n\n    const newReferences = changes.reduce((acc, [created, key, id]) => {\n      if (created) {\n        acc[key] = id.toUrl()\n      }\n      return acc\n    }, {} as Index)\n    await this._setReferences(newReferences)\n\n    return newReferences\n  }\n\n  async setDefaults(\n    contents: Record<string, Record<string, any>>,\n    options?: CreateOptions\n  ): Promise<Index> {\n    const index = (await this.getIndex()) ?? {}\n\n    const updates = Object.entries(contents)\n      .map(([name, content]) => [this._toIndexKey(name), content])\n      // This filter returned the type (string | Record<string, any>)[][]\n      // we need to add a type guard to get the correct type here.\n      .filter(\n        (entry): entry is [string, Record<string, any>] => index[entry[0] as IndexKey] == null\n      )\n      .map(async ([key, content]) => {\n        const definition = await this.getDefinition(key)\n        const id = await this._createRecord(definition, content, options)\n        return { [key]: id.toUrl() }\n      }) as Array<Promise<Index>>\n    const changes = await Promise.all(updates)\n\n    const newReferences = changes.reduce((acc, keyToID) => {\n      return Object.assign(acc, keyToID)\n    }, {} as Index)\n    await this._setReferences(newReferences)\n\n    return newReferences\n  }\n\n  async remove(name: string): Promise<void> {\n    const key = this._toIndexKey(name)\n    await this._removeReference(key)\n  }\n\n  _toIndexKey(name: string): IndexKey {\n    return this._aliases[name] ?? name\n  }\n\n  // Identity Index APIs\n\n  async getIndex(did?: string): Promise<Index | null> {\n    const rootDoc =\n      this.authenticated && (did === this.id || did == null)\n        ? await this._indexProxy.get()\n        : await this._getIDXDoc(did ?? this.id)\n    return rootDoc ? (rootDoc.content as Index) : null\n  }\n\n  iterator(did?: string): AsyncIterableIterator<Entry> {\n    let list: Array<[IndexKey, string]>\n    let cursor = 0\n\n    return {\n      [Symbol.asyncIterator]() {\n        return this\n      },\n      next: async (): Promise<IteratorResult<Entry>> => {\n        if (list == null) {\n          const index = await this.getIndex(did)\n          list = Object.entries(index ?? {})\n        }\n        if (cursor === list.length) {\n          return { done: true, value: null }\n        }\n\n        const [key, id] = list[cursor++]\n        const doc = await this._loadDocument(id)\n        return { done: false, value: { key, id, record: doc.content } }\n      },\n    }\n  }\n\n  async _createIDXDoc(did: string): Promise<TileDoc> {\n    if (isCaip10(did)) {\n      did = await this.caip10ToDid(did)\n    }\n    assertDid(did)\n    return await TileDocument.create<TileContent>(\n      this._ceramic,\n      null,\n      { deterministic: true, controllers: [did], family: 'IDX' },\n      { anchor: false, publish: false }\n    )\n  }\n\n  async _getIDXDoc(did: string): Promise<TileDoc | null> {\n    const doc = await this._createIDXDoc(did)\n    if (doc.metadata.schema == null) {\n      return null\n    }\n    if (doc.metadata.schema !== schemas.IdentityIndex) {\n      throw new Error('Invalid document: schema is not IdentityIndex')\n    }\n    return doc\n  }\n\n  async _getOwnIDXDoc(): Promise<TileDoc> {\n    const doc = await this._createIDXDoc(this.id)\n    if (doc.metadata.schema == null) {\n      // Doc just got created, need to update it with schema\n      await doc.update(null, { ...doc.metadata, schema: schemas.IdentityIndex })\n      if (this._autopin) {\n        await this._ceramic.pin.add(doc.id)\n      }\n    } else if (doc.metadata.schema !== schemas.IdentityIndex) {\n      throw new Error('Invalid document: schema is not IdentityIndex')\n    }\n    return doc\n  }\n\n  // Definition APIs\n\n  async getDefinition(idOrKey: StreamID | IndexKey): Promise<DefinitionWithID> {\n    const doc = await this._loadDocument(idOrKey)\n    if (doc.metadata.schema !== schemas.Definition) {\n      throw new Error('Invalid document: schema is not Definition')\n    }\n    return { ...doc.content, id: doc.id } as DefinitionWithID\n  }\n\n  // Record APIs\n\n  async getRecordID(key: IndexKey, did?: string): Promise<string | null> {\n    return await this._getReference(key, did)\n  }\n\n  async getRecordDocument(key: IndexKey, did?: string): Promise<TileDoc | null> {\n    const id = await this.getRecordID(key, did)\n    if (id == null) {\n      return null\n    }\n    return (await this._loadDocument(id)) ?? null\n  }\n\n  async _getRecord<T = unknown>(key: IndexKey, did?: string): Promise<T | null> {\n    const doc = await this.getRecordDocument(key, did)\n    return doc ? (doc.content as T) : null\n  }\n\n  async _setRecord(\n    key: IndexKey,\n    content: Record<string, any>,\n    options?: CreateOptions\n  ): Promise<StreamID> {\n    const [created, id] = await this._setRecordOnly(key, content, options)\n    if (created) {\n      await this._setReference(key, id)\n    }\n    return id\n  }\n\n  async _setRecordOnly(\n    key: IndexKey,\n    content: Record<string, any>,\n    { pin }: CreateOptions = {}\n  ): Promise<[boolean, StreamID]> {\n    const existing = await this._getReference(key, this.id)\n    if (existing == null) {\n      const definition = await this.getDefinition(key)\n      const ref = await this._createRecord(definition, content, { pin })\n      return [true, ref]\n    } else {\n      const doc = await this._loadDocument(existing)\n      await doc.update(content)\n      return [false, doc.id]\n    }\n  }\n\n  _loadDocument(id: StreamID | string): Promise<TileDoc> {\n    return this._ceramic.loadStream<TileDoc>(id)\n  }\n\n  async _createRecord(\n    definition: DefinitionWithID,\n    content: Record<string, any>,\n    { pin }: CreateOptions = {}\n  ): Promise<StreamID> {\n    const metadata = {\n      deterministic: true,\n      controllers: [this.id],\n      family: definition.id.toString(),\n    }\n    // Doc must first be created in a deterministic way\n    const doc = await TileDocument.create<TileContent>(this._ceramic, null, metadata, {\n      anchor: false,\n      publish: false,\n    })\n    // Then be updated with content and schema\n    const updated = doc.update(content, { ...metadata, schema: definition.schema })\n    if (pin ?? this._autopin) {\n      await Promise.all([updated, this._ceramic.pin.add(doc.id)])\n    } else {\n      await updated\n    }\n    return doc.id\n  }\n\n  // References APIs\n\n  async _getReference(key: IndexKey, did?: string): Promise<string | null> {\n    const index = await this.getIndex(did ?? this.id)\n    return index?.[key] ?? null\n  }\n\n  async _setReference(key: IndexKey, id: StreamID): Promise<void> {\n    await this._indexProxy.changeContent((index) => {\n      return { ...index, [key]: id.toUrl() }\n    })\n  }\n\n  async _setReferences(references: Index): Promise<void> {\n    if (Object.keys(references).length !== 0) {\n      await this._indexProxy.changeContent((index) => {\n        return { ...index, ...references }\n      })\n    }\n  }\n\n  async _removeReference(key: IndexKey): Promise<void> {\n    await this._indexProxy.changeContent((index) => {\n      if (index) delete index[key]\n      return index\n    })\n  }\n\n  async caip10ToDid(accountId: string): Promise<string> {\n    const link = await Caip10Link.fromAccount(this._ceramic, accountId)\n    if (link.did == null) {\n      throw new Error(`No DID found for ${accountId}`)\n    }\n    return link.did\n  }\n}\n"]},"metadata":{},"sourceType":"module"}