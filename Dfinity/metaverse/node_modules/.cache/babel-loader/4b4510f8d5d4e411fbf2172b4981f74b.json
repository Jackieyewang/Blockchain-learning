{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar TileDocument_1;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TileDocument = void 0;\n\nconst fast_json_patch_1 = __importDefault(require(\"fast-json-patch\"));\n\nconst uint8arrays = __importStar(require(\"uint8arrays\"));\n\nconst random_1 = require(\"@stablelib/random\");\n\nconst common_1 = require(\"@ceramicnetwork/common\");\n\nconst streamid_1 = require(\"@ceramicnetwork/streamid\");\n\nconst DEFAULT_CREATE_OPTS = {\n  anchor: true,\n  publish: true,\n  sync: common_1.SyncOptions.PREFER_CACHE\n};\nconst DEFAULT_LOAD_OPTS = {\n  sync: common_1.SyncOptions.PREFER_CACHE\n};\nconst DEFAULT_UPDATE_OPTS = {\n  anchor: true,\n  publish: true\n};\n\nfunction headerFromMetadata(metadata) {\n  var _a;\n\n  if (typeof (metadata === null || metadata === void 0 ? void 0 : metadata.schema) === 'string') {\n    try {\n      streamid_1.CommitID.fromString(metadata.schema);\n    } catch (_b) {\n      throw new Error(\"Schema must be a CommitID\");\n    }\n  }\n\n  const header = {\n    controllers: metadata === null || metadata === void 0 ? void 0 : metadata.controllers,\n    family: metadata === null || metadata === void 0 ? void 0 : metadata.family,\n    schema: (_a = metadata === null || metadata === void 0 ? void 0 : metadata.schema) === null || _a === void 0 ? void 0 : _a.toString(),\n    tags: metadata === null || metadata === void 0 ? void 0 : metadata.tags\n  };\n  Object.keys(header).forEach(key => header[key] === undefined && delete header[key]);\n  return header;\n}\n\nasync function _ensureAuthenticated(signer) {\n  if (signer.did == null) {\n    throw new Error('No DID provided');\n  }\n\n  if (!signer.did.authenticated) {\n    await signer.did.authenticate();\n\n    if (signer.loggerProvider) {\n      signer.loggerProvider.getDiagnosticsLogger().imp(`Now authenticated as DID ${signer.did.id}`);\n    }\n  }\n}\n\nasync function _signDagJWS(signer, commit, controller) {\n  await _ensureAuthenticated(signer);\n  return signer.did.createDagJWS(commit, {\n    did: controller\n  });\n}\n\nasync function throwReadOnlyError() {\n  throw new Error('Historical stream commits cannot be modified. Load the stream without specifying a commit to make updates.');\n}\n\nlet TileDocument = TileDocument_1 = class TileDocument extends common_1.Stream {\n  get content() {\n    return this._getContent();\n  }\n\n  static async create(ceramic, content, metadata, opts = {}) {\n    opts = { ...DEFAULT_CREATE_OPTS,\n      ...opts\n    };\n\n    if (!(metadata === null || metadata === void 0 ? void 0 : metadata.deterministic) && opts.syncTimeoutSeconds == undefined) {\n      opts.syncTimeoutSeconds = 0;\n    }\n\n    const commit = await TileDocument_1.makeGenesis(ceramic, content, metadata);\n    return ceramic.createStreamFromGenesis(TileDocument_1.STREAM_TYPE_ID, commit, opts);\n  }\n\n  static async createFromGenesis(ceramic, genesisCommit, opts = {}) {\n    var _a;\n\n    opts = { ...DEFAULT_CREATE_OPTS,\n      ...opts\n    };\n\n    if (((_a = genesisCommit.header) === null || _a === void 0 ? void 0 : _a.unique) && opts.syncTimeoutSeconds == undefined) {\n      opts.syncTimeoutSeconds = 0;\n    }\n\n    const commit = genesisCommit.data ? await _signDagJWS(ceramic, genesisCommit, genesisCommit.header.controllers[0]) : genesisCommit;\n    return ceramic.createStreamFromGenesis(TileDocument_1.STREAM_TYPE_ID, commit, opts);\n  }\n\n  static async load(ceramic, streamId, opts = {}) {\n    opts = { ...DEFAULT_LOAD_OPTS,\n      ...opts\n    };\n    const streamRef = streamid_1.StreamRef.from(streamId);\n\n    if (streamRef.type != TileDocument_1.STREAM_TYPE_ID) {\n      throw new Error(`StreamID ${streamRef.toString()} does not refer to a '${TileDocument_1.STREAM_TYPE_NAME}' stream, but to a ${streamRef.typeName}`);\n    }\n\n    return ceramic.loadStream(streamRef, opts);\n  }\n\n  async update(content, metadata, opts = {}) {\n    opts = { ...DEFAULT_UPDATE_OPTS,\n      ...opts\n    };\n    const updateCommit = await this.makeCommit(this.api, content, metadata);\n    const updated = await this.api.applyCommit(this.id, updateCommit, opts);\n    this.state$.next(updated.state);\n  }\n\n  async patch(jsonPatch, opts = {}) {\n    opts = { ...DEFAULT_UPDATE_OPTS,\n      ...opts\n    };\n    const header = headerFromMetadata(this.metadata);\n    const unsignedCommit = {\n      header,\n      data: jsonPatch,\n      prev: this.tip,\n      id: this.state$.id.cid\n    };\n    const commit = await _signDagJWS(this.api, unsignedCommit, this.controllers[0]);\n    const updated = await this.api.applyCommit(this.id, commit, opts);\n    this.state$.next(updated.state);\n  }\n\n  makeReadOnly() {\n    this.update = throwReadOnlyError;\n    this.patch = throwReadOnlyError;\n  }\n\n  async makeCommit(signer, newContent, newMetadata) {\n    var _a;\n\n    const header = headerFromMetadata(newMetadata);\n\n    if (newContent == null) {\n      newContent = this.content;\n    }\n\n    if (header.controllers && ((_a = header.controllers) === null || _a === void 0 ? void 0 : _a.length) !== 1) {\n      throw new Error('Exactly one controller must be specified');\n    }\n\n    const patch = fast_json_patch_1.default.compare(this.content, newContent);\n    const commit = {\n      header,\n      data: patch,\n      prev: this.tip,\n      id: this.state.log[0].cid\n    };\n    return _signDagJWS(signer, commit, this.controllers[0]);\n  }\n\n  static async makeGenesis(signer, content, metadata) {\n    var _a;\n\n    if (!metadata) {\n      metadata = {};\n    }\n\n    if (!metadata.controllers || metadata.controllers.length === 0) {\n      if (signer.did) {\n        await _ensureAuthenticated(signer);\n        metadata.controllers = [signer.did.id];\n      } else {\n        throw new Error('No controllers specified');\n      }\n    }\n\n    if (((_a = metadata.controllers) === null || _a === void 0 ? void 0 : _a.length) !== 1) {\n      throw new Error('Exactly one controller must be specified');\n    }\n\n    const header = headerFromMetadata(metadata);\n\n    if (!(metadata === null || metadata === void 0 ? void 0 : metadata.deterministic)) {\n      header.unique = uint8arrays.toString(random_1.randomBytes(12), 'base64');\n    } else if (content) {\n      throw new Error('Initial content must be null when creating a deterministic Tile document');\n    }\n\n    if (content == null) {\n      return {\n        header\n      };\n    }\n\n    const commit = {\n      data: content,\n      header\n    };\n    return await _signDagJWS(signer, commit, metadata.controllers[0]);\n  }\n\n};\nTileDocument.STREAM_TYPE_NAME = 'tile';\nTileDocument.STREAM_TYPE_ID = 0;\nTileDocument = TileDocument_1 = __decorate([common_1.StreamStatic()], TileDocument);\nexports.TileDocument = TileDocument;","map":{"version":3,"sources":["../src/tile-document.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar TileDocument_1;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TileDocument = void 0;\nconst fast_json_patch_1 = __importDefault(require(\"fast-json-patch\"));\nconst uint8arrays = __importStar(require(\"uint8arrays\"));\nconst random_1 = require(\"@stablelib/random\");\nconst common_1 = require(\"@ceramicnetwork/common\");\nconst streamid_1 = require(\"@ceramicnetwork/streamid\");\nconst DEFAULT_CREATE_OPTS = { anchor: true, publish: true, sync: common_1.SyncOptions.PREFER_CACHE };\nconst DEFAULT_LOAD_OPTS = { sync: common_1.SyncOptions.PREFER_CACHE };\nconst DEFAULT_UPDATE_OPTS = { anchor: true, publish: true };\nfunction headerFromMetadata(metadata) {\n    var _a;\n    if (typeof (metadata === null || metadata === void 0 ? void 0 : metadata.schema) === 'string') {\n        try {\n            streamid_1.CommitID.fromString(metadata.schema);\n        }\n        catch (_b) {\n            throw new Error(\"Schema must be a CommitID\");\n        }\n    }\n    const header = {\n        controllers: metadata === null || metadata === void 0 ? void 0 : metadata.controllers,\n        family: metadata === null || metadata === void 0 ? void 0 : metadata.family,\n        schema: (_a = metadata === null || metadata === void 0 ? void 0 : metadata.schema) === null || _a === void 0 ? void 0 : _a.toString(),\n        tags: metadata === null || metadata === void 0 ? void 0 : metadata.tags,\n    };\n    Object.keys(header).forEach(key => header[key] === undefined && delete header[key]);\n    return header;\n}\nasync function _ensureAuthenticated(signer) {\n    if (signer.did == null) {\n        throw new Error('No DID provided');\n    }\n    if (!signer.did.authenticated) {\n        await signer.did.authenticate();\n        if (signer.loggerProvider) {\n            signer.loggerProvider.getDiagnosticsLogger().imp(`Now authenticated as DID ${signer.did.id}`);\n        }\n    }\n}\nasync function _signDagJWS(signer, commit, controller) {\n    await _ensureAuthenticated(signer);\n    return signer.did.createDagJWS(commit, { did: controller });\n}\nasync function throwReadOnlyError() {\n    throw new Error('Historical stream commits cannot be modified. Load the stream without specifying a commit to make updates.');\n}\nlet TileDocument = TileDocument_1 = class TileDocument extends common_1.Stream {\n    get content() {\n        return this._getContent();\n    }\n    static async create(ceramic, content, metadata, opts = {}) {\n        opts = { ...DEFAULT_CREATE_OPTS, ...opts };\n        if (!(metadata === null || metadata === void 0 ? void 0 : metadata.deterministic) && opts.syncTimeoutSeconds == undefined) {\n            opts.syncTimeoutSeconds = 0;\n        }\n        const commit = await TileDocument_1.makeGenesis(ceramic, content, metadata);\n        return ceramic.createStreamFromGenesis(TileDocument_1.STREAM_TYPE_ID, commit, opts);\n    }\n    static async createFromGenesis(ceramic, genesisCommit, opts = {}) {\n        var _a;\n        opts = { ...DEFAULT_CREATE_OPTS, ...opts };\n        if (((_a = genesisCommit.header) === null || _a === void 0 ? void 0 : _a.unique) && opts.syncTimeoutSeconds == undefined) {\n            opts.syncTimeoutSeconds = 0;\n        }\n        const commit = (genesisCommit.data ? await _signDagJWS(ceramic, genesisCommit, genesisCommit.header.controllers[0]) : genesisCommit);\n        return ceramic.createStreamFromGenesis(TileDocument_1.STREAM_TYPE_ID, commit, opts);\n    }\n    static async load(ceramic, streamId, opts = {}) {\n        opts = { ...DEFAULT_LOAD_OPTS, ...opts };\n        const streamRef = streamid_1.StreamRef.from(streamId);\n        if (streamRef.type != TileDocument_1.STREAM_TYPE_ID) {\n            throw new Error(`StreamID ${streamRef.toString()} does not refer to a '${TileDocument_1.STREAM_TYPE_NAME}' stream, but to a ${streamRef.typeName}`);\n        }\n        return ceramic.loadStream(streamRef, opts);\n    }\n    async update(content, metadata, opts = {}) {\n        opts = { ...DEFAULT_UPDATE_OPTS, ...opts };\n        const updateCommit = await this.makeCommit(this.api, content, metadata);\n        const updated = await this.api.applyCommit(this.id, updateCommit, opts);\n        this.state$.next(updated.state);\n    }\n    async patch(jsonPatch, opts = {}) {\n        opts = { ...DEFAULT_UPDATE_OPTS, ...opts };\n        const header = headerFromMetadata(this.metadata);\n        const unsignedCommit = { header, data: jsonPatch, prev: this.tip, id: this.state$.id.cid };\n        const commit = await _signDagJWS(this.api, unsignedCommit, this.controllers[0]);\n        const updated = await this.api.applyCommit(this.id, commit, opts);\n        this.state$.next(updated.state);\n    }\n    makeReadOnly() {\n        this.update = throwReadOnlyError;\n        this.patch = throwReadOnlyError;\n    }\n    async makeCommit(signer, newContent, newMetadata) {\n        var _a;\n        const header = headerFromMetadata(newMetadata);\n        if (newContent == null) {\n            newContent = this.content;\n        }\n        if (header.controllers && ((_a = header.controllers) === null || _a === void 0 ? void 0 : _a.length) !== 1) {\n            throw new Error('Exactly one controller must be specified');\n        }\n        const patch = fast_json_patch_1.default.compare(this.content, newContent);\n        const commit = { header, data: patch, prev: this.tip, id: this.state.log[0].cid };\n        return _signDagJWS(signer, commit, this.controllers[0]);\n    }\n    static async makeGenesis(signer, content, metadata) {\n        var _a;\n        if (!metadata) {\n            metadata = {};\n        }\n        if (!metadata.controllers || metadata.controllers.length === 0) {\n            if (signer.did) {\n                await _ensureAuthenticated(signer);\n                metadata.controllers = [signer.did.id];\n            }\n            else {\n                throw new Error('No controllers specified');\n            }\n        }\n        if (((_a = metadata.controllers) === null || _a === void 0 ? void 0 : _a.length) !== 1) {\n            throw new Error('Exactly one controller must be specified');\n        }\n        const header = headerFromMetadata(metadata);\n        if (!(metadata === null || metadata === void 0 ? void 0 : metadata.deterministic)) {\n            header.unique = uint8arrays.toString(random_1.randomBytes(12), 'base64');\n        }\n        else if (content) {\n            throw new Error('Initial content must be null when creating a deterministic Tile document');\n        }\n        if (content == null) {\n            return { header };\n        }\n        const commit = { data: content, header };\n        return await _signDagJWS(signer, commit, metadata.controllers[0]);\n    }\n};\nTileDocument.STREAM_TYPE_NAME = 'tile';\nTileDocument.STREAM_TYPE_ID = 0;\nTileDocument = TileDocument_1 = __decorate([\n    common_1.StreamStatic()\n], TileDocument);\nexports.TileDocument = TileDocument;\n//# sourceMappingURL=tile-document.js.map"]},"metadata":{},"sourceType":"script"}