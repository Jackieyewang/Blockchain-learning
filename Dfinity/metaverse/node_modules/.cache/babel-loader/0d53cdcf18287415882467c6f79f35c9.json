{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/ownership/Datadidi/test/DataDiDi/packages/metaverse/src/pages/Login/Login.tsx\";\nimport React, { Component } from 'react';\nimport './Login.less';\nimport { Button } from 'antd';\nimport metamaskLogo from \"../../assets/images/metamask-fox.svg\";\nimport { authenticateWithEthereum, initCollections, getDID } from '../../apis/ceramic';\nimport { connectWithWeb3 } from '../../apis/web3';\nimport storage from '../../utils/storage';\nimport { STORAGE_TYPE } from '../../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EMOJIS = ['🌈', '🌼', '🌸', '🍔', '🍟', '🍕', '🌮', '🥞', '🥐', '🌭', '🍫', '🍩', '🍪', '🍿', '🍣', '🥪', '🍜', '🥟', '🍬', '🍮', '💛', '💖', '🥡', '💊', '🎁', '🎀'];\nlet timer;\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.login = async () => {\n      try {\n        this.setState({\n          loading: true\n        });\n        const {\n          provider,\n          addresses\n        } = await connectWithWeb3();\n        await authenticateWithEthereum(provider, addresses[0]);\n        await initCollections();\n        storage.setItem(STORAGE_TYPE.STORED_DID, getDID());\n        this.setState({\n          loading: false\n        }, () => {\n          this.props.history.replace('/');\n        });\n      } catch (error) {\n        console.log(error);\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this.state = {\n      currentEmoji: '',\n      loading: false\n    };\n    timer = window.setInterval(() => {\n      this.setState({\n        currentEmoji: EMOJIS[Math.floor(Math.random() * EMOJIS.length)]\n      });\n    }, 800);\n  }\n\n  componentWillUnmount() {\n    clearInterval(timer);\n  }\n\n  render() {\n    const {\n      currentEmoji,\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: [currentEmoji, \" Enter An Incarnatin Radius\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub-title\",\n        children: \"3ID Metamask connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"login-wrapper\",\n        onClick: () => this.login(),\n        loading: loading,\n        children: [\"Login with \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: metamaskLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/apple/Documents/ownership/Datadidi/test/DataDiDi/packages/metaverse/src/pages/Login/Login.tsx"],"names":["React","Component","Button","authenticateWithEthereum","initCollections","getDID","connectWithWeb3","storage","STORAGE_TYPE","EMOJIS","timer","Login","constructor","props","login","setState","loading","provider","addresses","setItem","STORED_DID","history","replace","error","console","log","state","currentEmoji","window","setInterval","Math","floor","random","length","componentWillUnmount","clearInterval","render","metamaskLogo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Login.less';\nimport { Button } from 'antd';\nimport metamaskLogo from '../../assets/images/metamask-fox.svg';\n\nimport { authenticateWithEthereum, initCollections, getDID } from '../../apis/ceramic';\nimport { connectWithWeb3 } from '../../apis/web3';\nimport storage from '../../utils/storage';\nimport { STORAGE_TYPE } from '../../utils/constants';\n\ninterface LoginState {\n  currentEmoji: string;\n  loading: boolean;\n}\n\ninterface LoginProps {\n  history: any;\n}\n\nconst EMOJIS = [\n  '🌈',\n  '🌼',\n  '🌸',\n  '🍔',\n  '🍟',\n  '🍕',\n  '🌮',\n  '🥞',\n  '🥐',\n  '🌭',\n  '🍫',\n  '🍩',\n  '🍪',\n  '🍿',\n  '🍣',\n  '🥪',\n  '🍜',\n  '🥟',\n  '🍬',\n  '🍮',\n  '💛',\n  '💖',\n  '🥡',\n  '💊',\n  '🎁',\n  '🎀',\n];\n\nlet timer: number | undefined;\n\nexport default class Login extends Component<LoginProps, LoginState> {\n  constructor(props: LoginProps) {\n    super(props);\n\n    this.state = {\n      currentEmoji: '',\n      loading: false,\n    };\n\n    timer = window.setInterval(() => {\n      this.setState({\n        currentEmoji: EMOJIS[Math.floor(Math.random() * EMOJIS.length)],\n      });\n    }, 800);\n  }\n\n  login = async () => {\n    try {\n      this.setState({ loading: true });\n      const { provider, addresses } = await connectWithWeb3();\n      await authenticateWithEthereum(provider, addresses[0]);\n      await initCollections();\n      storage.setItem(STORAGE_TYPE.STORED_DID, getDID());\n      this.setState({ loading: false }, () => {\n        this.props.history.replace('/');\n      });\n    } catch (error) {\n      console.log(error);\n      this.setState({ loading: false });\n    }\n  };\n\n  componentWillUnmount() {\n    clearInterval(timer);\n  }\n\n  render() {\n    const { currentEmoji, loading } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"title\">{currentEmoji} Enter An Incarnatin Radius</div>\n        <div className=\"sub-title\">3ID Metamask connect</div>\n\n        <Button className=\"login-wrapper\" onClick={() => this.login()} loading={loading}>\n          Login with <img src={metamaskLogo} />\n        </Button>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}