{"ast":null,"code":"const {\n  MetaMaskInpageProvider\n} = require('@metamask/inpage-provider');\n\nconst PortStream = require('extension-port-stream');\n\nconst {\n  detect\n} = require('detect-browser');\n\nconst browser = detect();\n\nconst config = require('./config.json');\n\nmodule.exports = function createMetaMaskProvider() {\n  let provider;\n\n  try {\n    let currentMetaMaskId = getMetaMaskId();\n    const metamaskPort = chrome.runtime.connect(currentMetaMaskId);\n    const pluginStream = new PortStream(metamaskPort);\n    provider = new MetaMaskInpageProvider(pluginStream);\n  } catch (e) {\n    console.dir(`Metamask connect error `, e);\n    throw e;\n  }\n\n  return provider;\n};\n\nfunction getMetaMaskId() {\n  switch (browser && browser.name) {\n    case 'chrome':\n      return config.CHROME_ID;\n\n    case 'firefox':\n      return config.FIREFOX_ID;\n\n    default:\n      return config.CHROME_ID;\n  }\n}","map":{"version":3,"sources":["/Users/apple/Documents/ownership/Datadidi/test/DataDiDi/node_modules/.pnpm/metamask-extension-provider@3.0.0/node_modules/metamask-extension-provider/index.js"],"names":["MetaMaskInpageProvider","require","PortStream","detect","browser","config","module","exports","createMetaMaskProvider","provider","currentMetaMaskId","getMetaMaskId","metamaskPort","chrome","runtime","connect","pluginStream","e","console","dir","name","CHROME_ID","FIREFOX_ID"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAA6BC,OAAO,CAAC,2BAAD,CAA1C;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,uBAAD,CAA1B;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAaF,OAAO,CAAC,gBAAD,CAA1B;;AACA,MAAMG,OAAO,GAAGD,MAAM,EAAtB;;AACA,MAAME,MAAM,GAAGJ,OAAO,CAAC,eAAD,CAAtB;;AAEAK,MAAM,CAACC,OAAP,GAAiB,SAASC,sBAAT,GAAmC;AAClD,MAAIC,QAAJ;;AACA,MAAI;AACF,QAAIC,iBAAiB,GAAGC,aAAa,EAArC;AACA,UAAMC,YAAY,GAAGC,MAAM,CAACC,OAAP,CAAeC,OAAf,CAAuBL,iBAAvB,CAArB;AACA,UAAMM,YAAY,GAAG,IAAId,UAAJ,CAAeU,YAAf,CAArB;AACAH,IAAAA,QAAQ,GAAG,IAAIT,sBAAJ,CAA2BgB,YAA3B,CAAX;AACF,GALA,CAKC,OAAOC,CAAP,EAAU;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAa,yBAAb,EAAuCF,CAAvC;AACA,UAAMA,CAAN;AACD;;AACD,SAAOR,QAAP;AACD,CAZD;;AAcA,SAASE,aAAT,GAA0B;AACxB,UAAQP,OAAO,IAAIA,OAAO,CAACgB,IAA3B;AACE,SAAK,QAAL;AACE,aAAOf,MAAM,CAACgB,SAAd;;AACF,SAAK,SAAL;AACE,aAAOhB,MAAM,CAACiB,UAAd;;AACF;AACE,aAAOjB,MAAM,CAACgB,SAAd;AANJ;AAQD","sourcesContent":["const { MetaMaskInpageProvider } = require('@metamask/inpage-provider')\nconst PortStream = require('extension-port-stream')\nconst { detect } = require('detect-browser')\nconst browser = detect()\nconst config = require('./config.json')\n\nmodule.exports = function createMetaMaskProvider () {\n  let provider\n  try {\n    let currentMetaMaskId = getMetaMaskId()\n    const metamaskPort = chrome.runtime.connect(currentMetaMaskId)\n    const pluginStream = new PortStream(metamaskPort)\n    provider = new MetaMaskInpageProvider(pluginStream)\n } catch (e) {\n    console.dir(`Metamask connect error `, e)\n    throw e\n  }\n  return provider\n}\n\nfunction getMetaMaskId () {\n  switch (browser && browser.name) {\n    case 'chrome':\n      return config.CHROME_ID\n    case 'firefox':\n      return config.FIREFOX_ID\n    default:\n      return config.CHROME_ID\n  }\n}\n\n"]},"metadata":{},"sourceType":"script"}