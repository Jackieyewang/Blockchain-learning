{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.asTransaction = exports.FilecoinAuthProvider = void 0;\n\nconst caip_1 = require(\"caip\");\n\nconst util_1 = require(\"./util\");\n\nconst uint8arrays = __importStar(require(\"uint8arrays\"));\n\nclass FilecoinAuthProvider {\n  constructor(provider, address) {\n    this.provider = provider;\n    this.address = address;\n    this.isAuthProvider = true;\n  }\n\n  async accountId() {\n    const prefix = this.address[0];\n    const chainId = `fil:${prefix}`;\n    return new caip_1.AccountID({\n      address: this.address,\n      chainId\n    });\n  }\n\n  async authenticate(message) {\n    const payload = asTransaction(this.address, JSON.stringify(message));\n    const signatureResponse = await this.provider.sign(this.address, payload);\n    return signatureResponse.Signature.Data;\n  }\n\n  async createLink(did) {\n    const {\n      message,\n      timestamp\n    } = util_1.getConsentMessage(did, true);\n    const payload = asTransaction(this.address, message);\n    const signatureResponse = await this.provider.sign(this.address, payload);\n    const accountId = await this.accountId();\n    return {\n      version: 2,\n      type: \"eoa-tx\",\n      message: message,\n      signature: signatureResponse.Signature.Data,\n      account: accountId.toString(),\n      timestamp: timestamp\n    };\n  }\n\n  withAddress(address) {\n    return new FilecoinAuthProvider(this.provider, address);\n  }\n\n}\n\nexports.FilecoinAuthProvider = FilecoinAuthProvider;\n\nfunction asTransaction(address, message) {\n  const messageParams = uint8arrays.toString(uint8arrays.fromString(message), \"base64\");\n  return {\n    From: address,\n    To: address,\n    Value: \"0\",\n    Method: 0,\n    GasPrice: \"1\",\n    GasLimit: 1000,\n    Nonce: 0,\n    Params: messageParams,\n    GasFeeCap: \"1\",\n    GasPremium: \"1\"\n  };\n}\n\nexports.asTransaction = asTransaction;","map":{"version":3,"sources":["../src/filecoin.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,MAAA,MAAA,GAAA,OAAA,CAAA,MAAA,CAAA;;AACA,MAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAEA,MAAA,WAAA,GAAA,YAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;AAEA,MAAa,oBAAb,CAAiC;AAG/B,EAAA,WAAA,CACmB,QADnB,EAEmB,OAFnB,EAEkC;AADf,SAAA,QAAA,GAAA,QAAA;AACA,SAAA,OAAA,GAAA,OAAA;AAJV,SAAA,cAAA,GAAiB,IAAjB;AAKL;;AAEW,QAAT,SAAS,GAAA;AACb,UAAM,MAAM,GAAG,KAAK,OAAL,CAAa,CAAb,CAAf;AACA,UAAM,OAAO,GAAG,OAAO,MAAM,EAA7B;AACA,WAAO,IAAI,MAAA,CAAA,SAAJ,CAAc;AAAE,MAAA,OAAO,EAAE,KAAK,OAAhB;AAAyB,MAAA;AAAzB,KAAd,CAAP;AACD;;AAEiB,QAAZ,YAAY,CAAC,OAAD,EAAgB;AAChC,UAAM,OAAO,GAAG,aAAa,CAAC,KAAK,OAAN,EAAe,IAAI,CAAC,SAAL,CAAe,OAAf,CAAf,CAA7B;AACA,UAAM,iBAAiB,GAAG,MAAM,KAAK,QAAL,CAAc,IAAd,CAAmB,KAAK,OAAxB,EAAiC,OAAjC,CAAhC;AACA,WAAO,iBAAiB,CAAC,SAAlB,CAA4B,IAAnC;AACD;;AAEe,QAAV,UAAU,CAAC,GAAD,EAAY;AAC1B,UAAM;AAAE,MAAA,OAAF;AAAW,MAAA;AAAX,QAAyB,MAAA,CAAA,iBAAA,CAAkB,GAAlB,EAAuB,IAAvB,CAA/B;AACA,UAAM,OAAO,GAAG,aAAa,CAAC,KAAK,OAAN,EAAe,OAAf,CAA7B;AACA,UAAM,iBAAiB,GAAG,MAAM,KAAK,QAAL,CAAc,IAAd,CAAmB,KAAK,OAAxB,EAAiC,OAAjC,CAAhC;AACA,UAAM,SAAS,GAAG,MAAM,KAAK,SAAL,EAAxB;AACA,WAAO;AACL,MAAA,OAAO,EAAE,CADJ;AAEL,MAAA,IAAI,EAAE,QAFD;AAGL,MAAA,OAAO,EAAE,OAHJ;AAIL,MAAA,SAAS,EAAE,iBAAiB,CAAC,SAAlB,CAA4B,IAJlC;AAKL,MAAA,OAAO,EAAE,SAAS,CAAC,QAAV,EALJ;AAML,MAAA,SAAS,EAAE;AANN,KAAP;AAQD;;AAED,EAAA,WAAW,CAAC,OAAD,EAAgB;AACzB,WAAO,IAAI,oBAAJ,CAAyB,KAAK,QAA9B,EAAwC,OAAxC,CAAP;AACD;;AArC8B;;AAAjC,OAAA,CAAA,oBAAA,GAAA,oBAAA;;AAwCA,SAAgB,aAAhB,CAA8B,OAA9B,EAA+C,OAA/C,EAA8D;AAC5D,QAAM,aAAa,GAAG,WAAW,CAAC,QAAZ,CACpB,WAAW,CAAC,UAAZ,CAAuB,OAAvB,CADoB,EAEpB,QAFoB,CAAtB;AAIA,SAAO;AACL,IAAA,IAAI,EAAE,OADD;AAEL,IAAA,EAAE,EAAE,OAFC;AAGL,IAAA,KAAK,EAAE,GAHF;AAIL,IAAA,MAAM,EAAE,CAJH;AAKL,IAAA,QAAQ,EAAE,GALL;AAML,IAAA,QAAQ,EAAE,IANL;AAOL,IAAA,KAAK,EAAE,CAPF;AAQL,IAAA,MAAM,EAAE,aARH;AASL,IAAA,SAAS,EAAE,GATN;AAUL,IAAA,UAAU,EAAE;AAVP,GAAP;AAYD;;AAjBD,OAAA,CAAA,aAAA,GAAA,aAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.asTransaction = exports.FilecoinAuthProvider = void 0;\nconst caip_1 = require(\"caip\");\nconst util_1 = require(\"./util\");\nconst uint8arrays = __importStar(require(\"uint8arrays\"));\nclass FilecoinAuthProvider {\n    constructor(provider, address) {\n        this.provider = provider;\n        this.address = address;\n        this.isAuthProvider = true;\n    }\n    async accountId() {\n        const prefix = this.address[0];\n        const chainId = `fil:${prefix}`;\n        return new caip_1.AccountID({ address: this.address, chainId });\n    }\n    async authenticate(message) {\n        const payload = asTransaction(this.address, JSON.stringify(message));\n        const signatureResponse = await this.provider.sign(this.address, payload);\n        return signatureResponse.Signature.Data;\n    }\n    async createLink(did) {\n        const { message, timestamp } = util_1.getConsentMessage(did, true);\n        const payload = asTransaction(this.address, message);\n        const signatureResponse = await this.provider.sign(this.address, payload);\n        const accountId = await this.accountId();\n        return {\n            version: 2,\n            type: \"eoa-tx\",\n            message: message,\n            signature: signatureResponse.Signature.Data,\n            account: accountId.toString(),\n            timestamp: timestamp,\n        };\n    }\n    withAddress(address) {\n        return new FilecoinAuthProvider(this.provider, address);\n    }\n}\nexports.FilecoinAuthProvider = FilecoinAuthProvider;\nfunction asTransaction(address, message) {\n    const messageParams = uint8arrays.toString(uint8arrays.fromString(message), \"base64\");\n    return {\n        From: address,\n        To: address,\n        Value: \"0\",\n        Method: 0,\n        GasPrice: \"1\",\n        GasLimit: 1000,\n        Nonce: 0,\n        Params: messageParams,\n        GasFeeCap: \"1\",\n        GasPremium: \"1\",\n    };\n}\nexports.asTransaction = asTransaction;\n//# sourceMappingURL=filecoin.js.map"]},"metadata":{},"sourceType":"script"}