{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst readable_stream_1 = require(\"readable-stream\");\n/**\n * Takes a JsonRpcEngine and returns a Duplex stream wrapping it.\n *\n * @param opts - Options bag.\n * @param opts.engine - The JsonRpcEngine to wrap in a stream.\n * @returns The stream wrapping the engine.\n */\n\n\nfunction createEngineStream(opts) {\n  if (!opts || !opts.engine) {\n    throw new Error('Missing engine parameter!');\n  }\n\n  const {\n    engine\n  } = opts;\n  const stream = new readable_stream_1.Duplex({\n    objectMode: true,\n    read,\n    write\n  }); // forward notifications\n\n  if (engine.on) {\n    engine.on('notification', message => {\n      stream.push(message);\n    });\n  }\n\n  return stream;\n\n  function read() {\n    return undefined;\n  }\n\n  function write(req, _encoding, cb) {\n    engine.handle(req, (_err, res) => {\n      stream.push(res);\n    });\n    cb();\n  }\n}\n\nexports.default = createEngineStream;","map":{"version":3,"sources":["../src/createEngineStream.ts"],"names":[],"mappings":";;;;;;AAAA,MAAA,iBAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;AAOA;;;;;;AAMG;;;AACH,SAAwB,kBAAxB,CAA2C,IAA3C,EAAoE;AAClE,MAAI,CAAC,IAAD,IAAS,CAAC,IAAI,CAAC,MAAnB,EAA2B;AACzB,UAAM,IAAI,KAAJ,CAAU,2BAAV,CAAN;AACD;;AAED,QAAM;AAAE,IAAA;AAAF,MAAa,IAAnB;AACA,QAAM,MAAM,GAAG,IAAI,iBAAA,CAAA,MAAJ,CAAW;AAAE,IAAA,UAAU,EAAE,IAAd;AAAoB,IAAA,IAApB;AAA0B,IAAA;AAA1B,GAAX,CAAf,CANkE,CAOlE;;AACA,MAAI,MAAM,CAAC,EAAX,EAAe;AACb,IAAA,MAAM,CAAC,EAAP,CAAU,cAAV,EAA2B,OAAD,IAAY;AACpC,MAAA,MAAM,CAAC,IAAP,CAAY,OAAZ;AACD,KAFD;AAGD;;AACD,SAAO,MAAP;;AAEA,WAAS,IAAT,GAAa;AACX,WAAO,SAAP;AACD;;AAED,WAAS,KAAT,CACE,GADF,EAEE,SAFF,EAGE,EAHF,EAGoC;AAElC,IAAA,MAAM,CAAC,MAAP,CAAc,GAAd,EAAmB,CAAC,IAAD,EAAO,GAAP,KAAc;AAC/B,MAAA,MAAM,CAAC,IAAP,CAAY,GAAZ;AACD,KAFD;AAGA,IAAA,EAAE;AACH;AACF;;AA7BD,OAAA,CAAA,OAAA,GAAA,kBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst readable_stream_1 = require(\"readable-stream\");\n/**\n * Takes a JsonRpcEngine and returns a Duplex stream wrapping it.\n *\n * @param opts - Options bag.\n * @param opts.engine - The JsonRpcEngine to wrap in a stream.\n * @returns The stream wrapping the engine.\n */\nfunction createEngineStream(opts) {\n    if (!opts || !opts.engine) {\n        throw new Error('Missing engine parameter!');\n    }\n    const { engine } = opts;\n    const stream = new readable_stream_1.Duplex({ objectMode: true, read, write });\n    // forward notifications\n    if (engine.on) {\n        engine.on('notification', (message) => {\n            stream.push(message);\n        });\n    }\n    return stream;\n    function read() {\n        return undefined;\n    }\n    function write(req, _encoding, cb) {\n        engine.handle(req, (_err, res) => {\n            stream.push(res);\n        });\n        cb();\n    }\n}\nexports.default = createEngineStream;\n//# sourceMappingURL=createEngineStream.js.map"]},"metadata":{},"sourceType":"script"}