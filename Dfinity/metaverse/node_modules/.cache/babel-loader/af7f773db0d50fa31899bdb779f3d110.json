{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ObjectMultiplex = void 0;\n\nconst readable_stream_1 = require(\"readable-stream\");\n\nconst end_of_stream_1 = __importDefault(require(\"end-of-stream\"));\n\nconst once_1 = __importDefault(require(\"once\"));\n\nconst Substream_1 = require(\"./Substream\");\n\nconst IGNORE_SUBSTREAM = Symbol('IGNORE_SUBSTREAM');\n\nclass ObjectMultiplex extends readable_stream_1.Duplex {\n  constructor(opts = {}) {\n    super(Object.assign(Object.assign({}, opts), {\n      objectMode: true\n    }));\n    this._substreams = {};\n  }\n\n  createStream(name) {\n    // guard stream against destroyed already\n    if (this.destroyed) {\n      throw new Error(`ObjectMultiplex - parent stream for name \"${name}\" already destroyed`);\n    } // guard stream against ended already\n\n\n    if (this._readableState.ended || this._writableState.ended) {\n      throw new Error(`ObjectMultiplex - parent stream for name \"${name}\" already ended`);\n    } // validate name\n\n\n    if (!name) {\n      throw new Error('ObjectMultiplex - name must not be empty');\n    }\n\n    if (this._substreams[name]) {\n      throw new Error(`ObjectMultiplex - Substream for name \"${name}\" already exists`);\n    } // create substream\n\n\n    const substream = new Substream_1.Substream({\n      parent: this,\n      name\n    });\n    this._substreams[name] = substream; // listen for parent stream to end\n\n    anyStreamEnd(this, _error => {\n      return substream.destroy(_error || undefined);\n    });\n    return substream;\n  } // ignore streams (dont display orphaned data warning)\n\n\n  ignoreStream(name) {\n    // validate name\n    if (!name) {\n      throw new Error('ObjectMultiplex - name must not be empty');\n    }\n\n    if (this._substreams[name]) {\n      throw new Error(`ObjectMultiplex - Substream for name \"${name}\" already exists`);\n    } // set\n\n\n    this._substreams[name] = IGNORE_SUBSTREAM;\n  }\n\n  _read() {\n    return undefined;\n  }\n\n  _write(chunk, _encoding, callback) {\n    const {\n      name,\n      data\n    } = chunk;\n\n    if (!name) {\n      console.warn(`ObjectMultiplex - malformed chunk without name \"${chunk}\"`);\n      return callback();\n    } // get corresponding substream\n\n\n    const substream = this._substreams[name];\n\n    if (!substream) {\n      console.warn(`ObjectMultiplex - orphaned data for stream \"${name}\"`);\n      return callback();\n    } // push data into substream\n\n\n    if (substream !== IGNORE_SUBSTREAM) {\n      substream.push(data);\n    }\n\n    return callback();\n  }\n\n}\n\nexports.ObjectMultiplex = ObjectMultiplex; // util\n\nfunction anyStreamEnd(stream, _cb) {\n  const cb = once_1.default(_cb);\n  end_of_stream_1.default(stream, {\n    readable: false\n  }, cb);\n  end_of_stream_1.default(stream, {\n    writable: false\n  }, cb);\n}","map":{"version":3,"sources":["../src/ObjectMultiplex.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ObjectMultiplex = void 0;\nconst readable_stream_1 = require(\"readable-stream\");\nconst end_of_stream_1 = __importDefault(require(\"end-of-stream\"));\nconst once_1 = __importDefault(require(\"once\"));\nconst Substream_1 = require(\"./Substream\");\nconst IGNORE_SUBSTREAM = Symbol('IGNORE_SUBSTREAM');\nclass ObjectMultiplex extends readable_stream_1.Duplex {\n    constructor(opts = {}) {\n        super(Object.assign(Object.assign({}, opts), { objectMode: true }));\n        this._substreams = {};\n    }\n    createStream(name) {\n        // guard stream against destroyed already\n        if (this.destroyed) {\n            throw new Error(`ObjectMultiplex - parent stream for name \"${name}\" already destroyed`);\n        }\n        // guard stream against ended already\n        if (this._readableState.ended || this._writableState.ended) {\n            throw new Error(`ObjectMultiplex - parent stream for name \"${name}\" already ended`);\n        }\n        // validate name\n        if (!name) {\n            throw new Error('ObjectMultiplex - name must not be empty');\n        }\n        if (this._substreams[name]) {\n            throw new Error(`ObjectMultiplex - Substream for name \"${name}\" already exists`);\n        }\n        // create substream\n        const substream = new Substream_1.Substream({ parent: this, name });\n        this._substreams[name] = substream;\n        // listen for parent stream to end\n        anyStreamEnd(this, (_error) => {\n            return substream.destroy(_error || undefined);\n        });\n        return substream;\n    }\n    // ignore streams (dont display orphaned data warning)\n    ignoreStream(name) {\n        // validate name\n        if (!name) {\n            throw new Error('ObjectMultiplex - name must not be empty');\n        }\n        if (this._substreams[name]) {\n            throw new Error(`ObjectMultiplex - Substream for name \"${name}\" already exists`);\n        }\n        // set\n        this._substreams[name] = IGNORE_SUBSTREAM;\n    }\n    _read() {\n        return undefined;\n    }\n    _write(chunk, _encoding, callback) {\n        const { name, data } = chunk;\n        if (!name) {\n            console.warn(`ObjectMultiplex - malformed chunk without name \"${chunk}\"`);\n            return callback();\n        }\n        // get corresponding substream\n        const substream = this._substreams[name];\n        if (!substream) {\n            console.warn(`ObjectMultiplex - orphaned data for stream \"${name}\"`);\n            return callback();\n        }\n        // push data into substream\n        if (substream !== IGNORE_SUBSTREAM) {\n            substream.push(data);\n        }\n        return callback();\n    }\n}\nexports.ObjectMultiplex = ObjectMultiplex;\n// util\nfunction anyStreamEnd(stream, _cb) {\n    const cb = once_1.default(_cb);\n    end_of_stream_1.default(stream, { readable: false }, cb);\n    end_of_stream_1.default(stream, { writable: false }, cb);\n}\n//# sourceMappingURL=ObjectMultiplex.js.map"]},"metadata":{},"sourceType":"script"}