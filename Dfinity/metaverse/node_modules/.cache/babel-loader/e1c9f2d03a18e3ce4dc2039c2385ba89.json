{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { IDX } from '@ceramicstudio/idx';\nimport { aliases } from '../constants';\nimport { initCollections, hasCollections } from './collection';\nexport function createIDX(ceramic) {\n  const idx = new IDX({\n    ceramic,\n    aliases: Object.assign({}, aliases)\n  });\n  return idx;\n}\nexport function setDefaultIDX(idx) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const [CollectionDocID] = yield Promise.all([initCollections(idx)]);\n    return {\n      CollectionDocID\n    };\n  });\n}\nexport function hasDefaultIDX(idx) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const [CollectionsSetup] = yield Promise.all([hasCollections(idx)]);\n    return CollectionsSetup;\n  });\n}","map":{"version":3,"sources":["/Users/apple/Documents/ownership/Datadidi/test/DataDiDi/packages/idx-common/lib/esm/apis/idx.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","IDX","aliases","initCollections","hasCollections","createIDX","ceramic","idx","Object","assign","setDefaultIDX","CollectionDocID","all","hasDefaultIDX","CollectionsSetup"],"mappings":"AAAA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AACrF,WAASC,KAAT,CAAeC,KAAf,EAAsB;AAAE,WAAOA,KAAK,YAAYH,CAAjB,GAAqBG,KAArB,GAA6B,IAAIH,CAAJ,CAAM,UAAUI,OAAV,EAAmB;AAAEA,MAAAA,OAAO,CAACD,KAAD,CAAP;AAAiB,KAA5C,CAApC;AAAoF;;AAC5G,SAAO,KAAKH,CAAC,KAAKA,CAAC,GAAGK,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;AACvD,aAASC,SAAT,CAAmBJ,KAAnB,EAA0B;AAAE,UAAI;AAAEK,QAAAA,IAAI,CAACP,SAAS,CAACQ,IAAV,CAAeN,KAAf,CAAD,CAAJ;AAA8B,OAApC,CAAqC,OAAOO,CAAP,EAAU;AAAEJ,QAAAA,MAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC3F,aAASC,QAAT,CAAkBR,KAAlB,EAAyB;AAAE,UAAI;AAAEK,QAAAA,IAAI,CAACP,SAAS,CAAC,OAAD,CAAT,CAAmBE,KAAnB,CAAD,CAAJ;AAAkC,OAAxC,CAAyC,OAAOO,CAAP,EAAU;AAAEJ,QAAAA,MAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC9F,aAASF,IAAT,CAAcI,MAAd,EAAsB;AAAEA,MAAAA,MAAM,CAACC,IAAP,GAAcT,OAAO,CAACQ,MAAM,CAACT,KAAR,CAArB,GAAsCD,KAAK,CAACU,MAAM,CAACT,KAAR,CAAL,CAAoBW,IAApB,CAAyBP,SAAzB,EAAoCI,QAApC,CAAtC;AAAsF;;AAC9GH,IAAAA,IAAI,CAAC,CAACP,SAAS,GAAGA,SAAS,CAACc,KAAV,CAAgBjB,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDU,IAAzD,EAAD,CAAJ;AACH,GALM,CAAP;AAMH,CARD;;AASA,SAASO,GAAT,QAAoB,oBAApB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,cAAhD;AACA,OAAO,SAASC,SAAT,CAAmBC,OAAnB,EAA4B;AAC/B,QAAMC,GAAG,GAAG,IAAIN,GAAJ,CAAQ;AAChBK,IAAAA,OADgB;AAEhBJ,IAAAA,OAAO,EAAEM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,OAAlB;AAFO,GAAR,CAAZ;AAIA,SAAOK,GAAP;AACH;AACD,OAAO,SAASG,aAAT,CAAuBH,GAAvB,EAA4B;AAC/B,SAAOzB,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAChD,UAAM,CAAC6B,eAAD,IAAoB,MAAMrB,OAAO,CAACsB,GAAR,CAAY,CACxCT,eAAe,CAACI,GAAD,CADyB,CAAZ,CAAhC;AAGA,WAAO;AACHI,MAAAA;AADG,KAAP;AAGH,GAPe,CAAhB;AAQH;AACD,OAAO,SAASE,aAAT,CAAuBN,GAAvB,EAA4B;AAC/B,SAAOzB,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAChD,UAAM,CAACgC,gBAAD,IAAqB,MAAMxB,OAAO,CAACsB,GAAR,CAAY,CACzCR,cAAc,CAACG,GAAD,CAD2B,CAAZ,CAAjC;AAGA,WAAOO,gBAAP;AACH,GALe,CAAhB;AAMH","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { IDX } from '@ceramicstudio/idx';\nimport { aliases } from '../constants';\nimport { initCollections, hasCollections } from './collection';\nexport function createIDX(ceramic) {\n    const idx = new IDX({\n        ceramic,\n        aliases: Object.assign({}, aliases),\n    });\n    return idx;\n}\nexport function setDefaultIDX(idx) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const [CollectionDocID] = yield Promise.all([\n            initCollections(idx)\n        ]);\n        return {\n            CollectionDocID\n        };\n    });\n}\nexport function hasDefaultIDX(idx) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const [CollectionsSetup] = yield Promise.all([\n            hasCollections(idx)\n        ]);\n        return CollectionsSetup;\n    });\n}\n"]},"metadata":{},"sourceType":"module"}