{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst extension_port_stream_1 = __importDefault(require(\"extension-port-stream\"));\n\nconst detect_browser_1 = require(\"detect-browser\");\n\nconst BaseProvider_1 = __importDefault(require(\"../BaseProvider\"));\n\nconst external_extension_config_json_1 = __importDefault(require(\"./external-extension-config.json\"));\n\nconst browser = detect_browser_1.detect();\n\nfunction createMetaMaskExternalExtensionProvider() {\n  let provider;\n\n  try {\n    const currentMetaMaskId = getMetaMaskId();\n    const metamaskPort = chrome.runtime.connect(currentMetaMaskId);\n    const pluginStream = new extension_port_stream_1.default(metamaskPort);\n    provider = new BaseProvider_1.default(pluginStream);\n  } catch (e) {\n    console.dir(`Metamask connect error `, e);\n    throw e;\n  }\n\n  return provider;\n}\n\nexports.default = createMetaMaskExternalExtensionProvider;\n\nfunction getMetaMaskId() {\n  switch (browser === null || browser === void 0 ? void 0 : browser.name) {\n    case 'chrome':\n      return external_extension_config_json_1.default.CHROME_ID;\n\n    case 'firefox':\n      return external_extension_config_json_1.default.FIREFOX_ID;\n\n    default:\n      return external_extension_config_json_1.default.CHROME_ID;\n  }\n}","map":{"version":3,"sources":["../../src/extension-provider/createExternalExtensionProvider.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,MAAA,uBAAA,GAAA,eAAA,CAAA,OAAA,CAAA,uBAAA,CAAA,CAAA;;AACA,MAAA,gBAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AAEA,MAAA,cAAA,GAAA,eAAA,CAAA,OAAA,CAAA,iBAAA,CAAA,CAAA;;AACA,MAAA,gCAAA,GAAA,eAAA,CAAA,OAAA,CAAA,kCAAA,CAAA,CAAA;;AAEA,MAAM,OAAO,GAAG,gBAAA,CAAA,MAAA,EAAhB;;AAEA,SAAwB,uCAAxB,GAA+D;AAC7D,MAAI,QAAJ;;AACA,MAAI;AACF,UAAM,iBAAiB,GAAG,aAAa,EAAvC;AACA,UAAM,YAAY,GAAG,MAAM,CAAC,OAAP,CAAe,OAAf,CACnB,iBADmB,CAArB;AAGA,UAAM,YAAY,GAAG,IAAI,uBAAA,CAAA,OAAJ,CAAe,YAAf,CAArB;AACA,IAAA,QAAQ,GAAG,IAAI,cAAA,CAAA,OAAJ,CAAiB,YAAjB,CAAX;AACD,GAPD,CAOE,OAAO,CAAP,EAAU;AACV,IAAA,OAAO,CAAC,GAAR,CAAY,yBAAZ,EAAuC,CAAvC;AACA,UAAM,CAAN;AACD;;AACD,SAAO,QAAP;AACD;;AAdD,OAAA,CAAA,OAAA,GAAA,uCAAA;;AAgBA,SAAS,aAAT,GAAsB;AACpB,UAAQ,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAA,OAAO,CAAE,IAAjB;AACE,SAAK,QAAL;AACE,aAAO,gCAAA,CAAA,OAAA,CAAO,SAAd;;AACF,SAAK,SAAL;AACE,aAAO,gCAAA,CAAA,OAAA,CAAO,UAAd;;AACF;AACE,aAAO,gCAAA,CAAA,OAAA,CAAO,SAAd;AANJ;AAQD","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst extension_port_stream_1 = __importDefault(require(\"extension-port-stream\"));\nconst detect_browser_1 = require(\"detect-browser\");\nconst BaseProvider_1 = __importDefault(require(\"../BaseProvider\"));\nconst external_extension_config_json_1 = __importDefault(require(\"./external-extension-config.json\"));\nconst browser = detect_browser_1.detect();\nfunction createMetaMaskExternalExtensionProvider() {\n    let provider;\n    try {\n        const currentMetaMaskId = getMetaMaskId();\n        const metamaskPort = chrome.runtime.connect(currentMetaMaskId);\n        const pluginStream = new extension_port_stream_1.default(metamaskPort);\n        provider = new BaseProvider_1.default(pluginStream);\n    }\n    catch (e) {\n        console.dir(`Metamask connect error `, e);\n        throw e;\n    }\n    return provider;\n}\nexports.default = createMetaMaskExternalExtensionProvider;\nfunction getMetaMaskId() {\n    switch (browser === null || browser === void 0 ? void 0 : browser.name) {\n        case 'chrome':\n            return external_extension_config_json_1.default.CHROME_ID;\n        case 'firefox':\n            return external_extension_config_json_1.default.FIREFOX_ID;\n        default:\n            return external_extension_config_json_1.default.CHROME_ID;\n    }\n}\n//# sourceMappingURL=createExternalExtensionProvider.js.map"]},"metadata":{},"sourceType":"script"}