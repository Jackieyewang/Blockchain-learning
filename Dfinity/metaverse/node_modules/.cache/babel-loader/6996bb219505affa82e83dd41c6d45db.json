{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fetchJson = void 0;\n\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\n\nasync function fetchJson(url, opts = {}) {\n  if (opts.body) {\n    Object.assign(opts, {\n      body: JSON.stringify(opts.body),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  const res = await cross_fetch_1.default(url, opts);\n\n  if (!res.ok) {\n    const text = await res.text();\n    throw new Error(`HTTP request to '${url}' failed with status '${res.statusText}': ${text}`);\n  }\n\n  return res.json();\n}\n\nexports.fetchJson = fetchJson;","map":{"version":3,"sources":["../../src/utils/http-utils.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,MAAA,aAAA,GAAA,eAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;AAQO,eAAe,SAAf,CAAyB,GAAzB,EAAsC,IAAA,GAAkB,EAAxD,EAA0D;AAC7D,MAAI,IAAI,CAAC,IAAT,EAAe;AACX,IAAA,MAAM,CAAC,MAAP,CAAc,IAAd,EAAoB;AAChB,MAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,IAAI,CAAC,IAApB,CADU;AAEhB,MAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAFO,KAApB;AAIH;;AACD,QAAM,GAAG,GAAG,MAAM,aAAA,CAAA,OAAA,CAAM,GAAN,EAAW,IAAX,CAAlB;;AACA,MAAI,CAAC,GAAG,CAAC,EAAT,EAAa;AACT,UAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAJ,EAAnB;AACA,UAAM,IAAI,KAAJ,CAAU,oBAAoB,GAAG,yBAAyB,GAAG,CAAC,UAAU,MAAM,IAAI,EAAlF,CAAN;AACH;;AAED,SAAO,GAAG,CAAC,IAAJ,EAAP;AACH;;AAdD,OAAA,CAAA,SAAA,GAAA,SAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fetchJson = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nasync function fetchJson(url, opts = {}) {\n    if (opts.body) {\n        Object.assign(opts, {\n            body: JSON.stringify(opts.body),\n            headers: { 'Content-Type': 'application/json' }\n        });\n    }\n    const res = await cross_fetch_1.default(url, opts);\n    if (!res.ok) {\n        const text = await res.text();\n        throw new Error(`HTTP request to '${url}' failed with status '${res.statusText}': ${text}`);\n    }\n    return res.json();\n}\nexports.fetchJson = fetchJson;\n//# sourceMappingURL=http-utils.js.map"]},"metadata":{},"sourceType":"script"}